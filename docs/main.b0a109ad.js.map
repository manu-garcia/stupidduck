{"version":3,"sources":["node_modules/xgl/node_modules/gl-matrix/esm/common.js","node_modules/xgl/node_modules/gl-matrix/esm/mat2.js","node_modules/xgl/node_modules/gl-matrix/esm/mat2d.js","node_modules/xgl/node_modules/gl-matrix/esm/mat3.js","node_modules/xgl/node_modules/gl-matrix/esm/mat4.js","node_modules/xgl/node_modules/gl-matrix/esm/vec3.js","node_modules/xgl/node_modules/gl-matrix/esm/vec4.js","node_modules/xgl/node_modules/gl-matrix/esm/quat.js","node_modules/xgl/node_modules/gl-matrix/esm/quat2.js","node_modules/xgl/node_modules/gl-matrix/esm/vec2.js","node_modules/xgl/node_modules/gl-matrix/esm/index.js","../../src/gl/gl.ts","../../src/gl/shader.ts","../../../src/gl/shaders/basicShader.ts","../../src/gl/glBuffer.ts","../../src/graphics/materialManager.ts","../../src/math/vector2.ts","../../src/math/vector3.ts","../../src/graphics/vertex.ts","../../src/graphics/sprite.ts","../../src/components/baseComponent.ts","../../src/components/spriteComponent.ts","../../src/message/messageSubscriptionNode.ts","../../src/message/messageBus.ts","../../src/message/message.ts","../../src/assets/imageAssetLoader.ts","../../src/assets/jsonAssetLoader.ts","../../src/assets/TextAssetLoader.ts","../../src/assets/assetManager.ts","../../src/graphics/animatedSprite.ts","../../src/components/animatedSpriteComponent.ts","../../src/graphics/texture.ts","../../src/graphics/textureManager.ts","../../src/graphics/material.ts","../../src/graphics/color.ts","../../src/math/matrix4x4.ts","../../src/math/transform.ts","../../src/world/simObject.ts","../../src/world/scene.ts","../../src/components/componentManager.ts","../../src/behaviors/behaviorManager.ts","../../src/world/zone.ts","../../src/world/zoneManager.ts","../../src/behaviors/baseBehavior.ts","../../src/behaviors/rotationBehavior.ts","../../src/input/inputManager.ts","../../src/behaviors/keyboardMovementBehavior.ts","../../src/audio/audioManager.ts","../../../src/graphics/shapes2D/circle2D.ts","../../../src/graphics/shapes2D/rectangle2D.ts","../../src/collision/CollisionManager.ts","../../src/components/collisionComponent.ts","../../src/math/mathExtensions.ts","../../src/behaviors/PlayerBehavior.ts","../../src/behaviors/ScrollBehavior.ts","../../src/graphics/BitmapFont.ts","../../src/graphics/BitmapFontManager.ts","../../src/graphics/BitmapText.ts","../../src/components/BitmapTextComponent.ts","../../src/behaviors/MouseClickBehavior.ts","../../src/behaviors/VisibilityOnMessageBehavior.ts","../src/xgl.ts","src/main.ts","../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","hypot","y","i","arguments","length","sqrt","create","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","c","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","len","t","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","count","fn","arg","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","\nexport let gl: WebGLRenderingContext;\n\nexport class GLUtilities {\n\n    public static init(elId?: string): HTMLCanvasElement {\n        let canvas: HTMLCanvasElement;\n\n        if (elId !== undefined) {\n            canvas = document.getElementById(elId) as HTMLCanvasElement;\n            if (canvas === undefined) {\n                throw new Error(`Unable to find DOM element with ID: ${elId}`);\n            }\n        } else {\n            canvas = document.createElement('canvas') as HTMLCanvasElement;\n            document.body.appendChild(canvas);\n        }\n\n        gl = canvas.getContext('webgl') as WebGLRenderingContext;\n        if (gl === undefined || gl === null) {\n            gl = canvas.getContext('experimental-webgl') as WebGLRenderingContext;\n            if (gl === undefined || gl === null) {\n                throw new Error('Unable to get the rendering context.')\n            }\n        }\n\n        // TODO: This should not be here. As it is a game configuration.\n        gl.clearColor(146 / 255, 206 / 255, 247 / 255, 1);\n\n        // Allows transparency in sprites\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n        return canvas;\n    }\n\n    public static clearFrame(): void {\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n}","import { gl } from './gl';\n\n/**\n * Shaders are the programs that run in the GPU (Written in Open GL ES Shader language, ES SL)\n */\nexport abstract class Shader {\n    private _name: string;\n    private _program: WebGLProgram;\n    private _attributes: { [name: string]: number } = {};\n    private _uniforms: { [name: string]: WebGLUniformLocation } = {};\n\n    public constructor(name: string) {\n        this._name = name;\n    }\n\n    /**\n     * Use the shaders\n     */\n    public use(): void {\n        gl.useProgram(this._program);\n    }\n\n    /**\n     * Gets the location of an attribute\n     * \n     * @param name The name of the attribute to get the location for\n     */\n    public getAttributeLocation(name: string): number {\n        if (this._attributes[name] === undefined) {\n            throw new Error(`Unable to find attribute ${name} in shader ${this._name}`);\n        }\n\n        return this._attributes[name];\n    }\n\n    /**\n     * Gets the location of a uniform\n     * \n     * @param name The name of the uniform to get the location for\n     */\n    public getUniformLocation(name: string): WebGLUniformLocation {\n        if (this._uniforms[name] === undefined) {\n            throw new Error(`Unable to find uniform ${name} in shader ${this._name}`);\n        }\n\n        return this._uniforms[name];\n    }\n\n    /**\n     * \n     * @param vertexSource \n     * @param fragmentSource \n     */\n    protected load(vertexSource: string, fragmentSource: string): void {\n\n        const vertexShader = this.loadShader(vertexSource, gl.VERTEX_SHADER);\n        const fragmentShader = this.loadShader(fragmentSource, gl.FRAGMENT_SHADER);\n\n        this.createProgram(vertexShader, fragmentShader);\n        this.detectAttributes();\n        this.detectUniforms();\n\n    }\n\n    private loadShader(source: string, shaderType: number): WebGLShader {\n        const shader = gl.createShader(shaderType) as WebGLShader;\n\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        const error = gl.getShaderInfoLog(shader)?.trim();\n        if (error !== '') {\n            throw new Error(`Error compiling shader: ${this._name} with error: ${error}`);\n        }\n\n        return shader;\n    }\n\n    private createProgram(vertexShader: WebGLShader, fragmentShader: WebGLShader): void {\n        this._program = gl.createProgram() as WebGLProgram;\n\n        gl.attachShader(this._program, vertexShader);\n        gl.attachShader(this._program, fragmentShader);\n\n        gl.linkProgram(this._program);\n\n        const error = gl.getProgramInfoLog(this._program)?.trim();\n        if (error !== '') {\n            throw new Error(`Error creating the WebGL program: ${this._program} with error: ${error}`);\n        }\n\n    }\n\n    /**\n     * Extract attributes from shader source so that we can reference them.\n     */\n    private detectAttributes(): void {\n        const attributeCount = gl.getProgramParameter(this._program, gl.ACTIVE_ATTRIBUTES);\n\n        for (let i = 0; i < attributeCount; i++) {\n            const info: WebGLActiveInfo = gl.getActiveAttrib(this._program, i) as WebGLActiveInfo;\n\n            if (!info) {\n                break;\n            }\n\n            this._attributes[info.name] = gl.getAttribLocation(this._program, info.name);\n        }\n    }\n\n    /**\n     * Extract uniforms from shader source so that we can reference them.\n     */\n    private detectUniforms(): void {\n        const uniformCount = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\n\n        for (let i = 0; i < uniformCount; i++) {\n            const info: WebGLActiveInfo = gl.getActiveUniform(this._program, i) as WebGLActiveInfo;\n\n            if (!info) {\n                break;\n            }\n\n            this._uniforms[info.name] = gl.getUniformLocation(this._program, info.name) as WebGLUniformLocation;\n        }\n    }\n\n}","import { Shader } from '../shader';\n\nexport class BasicShader extends Shader {\n\n    public constructor() {\n        super('basic');\n        this.load(this.getVertexSource(), this.getFragmentSource());\n    }\n\n    private getVertexSource(): string {\n\n        // Fragment shader does not have access to attributes, thats why we use v_textCoord to\n        // copy a_texCoord over the Fragment Shader from the Vertex Shader\n        return `\n            attribute vec3 a_position;\n            attribute vec2 a_texCoord;\n            \n            uniform mat4 u_projection;\n            uniform mat4 u_model;\n\n            varying vec2 v_textCoord;\n\n            void main() {\n                gl_Position = u_projection * u_model * vec4(a_position, 1.0);\n                v_textCoord = a_texCoord;\n            }\n        `;\n    }\n\n    private getFragmentSource(): string {\n        // sampler to retrieve color out of the texture\n        return `\n            precision mediump float;\n\n            uniform vec4 u_tint;\n            uniform sampler2D u_diffuse;\n\n            varying vec2 v_textCoord;\n\n            void main () {\n                gl_FragColor = u_tint * texture2D(u_diffuse, v_textCoord);\n            }\n        `;\n    }\n}","import { gl } from './gl';\n\n/**\n * Struct of data needed for GLBuffer attribute\n */\nexport class AttributeInfo {\n\n    /**\n     * Location of the attribute\n     */\n    public location: number;\n\n    /**\n     * Size of the attribute (number of elements). i.e Vector3 = 3\n     */\n    public size: number;\n\n    /**\n     * Number of elements from the beginning of the buffer\n     */\n    public offset: number;\n}\n\n/**\n * A WebGLBuffer wrap\n */\nexport class GLBuffer {\n\n    private _hasAttributeLocation: boolean = false;\n\n    // An element would be a set of three coordinates x,y and z\n    private _elementSize: number;\n\n    private _stride: number;\n    private _buffer: WebGLBuffer;\n    private _targetBufferType: number;\n    private _dataType: number;\n    private _mode: number;\n    private _typeSize: number;\n\n    private _data: number[] = [];\n    private _attributes: AttributeInfo[] = [];\n\n    /**\n     * Creates a new GL buffer\n     * \n     * @param dataType : Data type of this buffer. Defaults to gl.FLOAT\n     * @param targetBufferType : The buffer taget type. Defaults to gl.ARRAY_BUFFER\n     * @param mode : The drawing mode of this buffer. Defaults to gl.TRIANGLES\n     */\n    public constructor(dataType: number = gl.FLOAT, targetBufferType: number = gl.ARRAY_BUFFER, mode: number = gl.TRIANGLES) {\n\n        this._elementSize = 0;\n        this._dataType = dataType;\n        this._targetBufferType = targetBufferType;\n        this._mode = mode;\n\n        switch (this._dataType) {\n            case gl.FLOAT:\n            case gl.INT:\n            case gl.UNSIGNED_INT:\n                this._typeSize = 4;\n                break;\n\n            case gl.SHORT:\n            case gl.UNSIGNED_SHORT:\n                this._typeSize = 2;\n                break;\n\n            case gl.BYTE:\n            case gl.UNSIGNED_BYTE:\n                this._typeSize = 1;\n                break;\n\n            default:\n                throw new Error(`Unrecognised datatype ${this._dataType.toString()}`);\n        }\n\n        this._buffer = gl.createBuffer() as WebGLBuffer;\n    }\n\n    /**\n     * Delete the buffer from memory\n     */\n    public destroy(): void {\n        gl.deleteBuffer(this._buffer);\n    }\n\n    /**\n     * Binds this buffer\n     * \n     * @param normalised : Indicates whther the data should be normalised\n     */\n    public bind(normalised: boolean = false): void {\n        gl.bindBuffer(this._targetBufferType, this._buffer);\n\n        if (this._hasAttributeLocation) {\n            for (let attr of this._attributes) {\n                gl.vertexAttribPointer(attr.location, attr.size, this._dataType, normalised, this._stride, attr.offset * this._typeSize);\n                gl.enableVertexAttribArray(attr.location);\n            }\n        }\n    }\n\n    /**\n     * Unbinds this buffer\n     */\n    public unbind(): void {\n        for (let attr of this._attributes) {\n            gl.disableVertexAttribArray(attr.location);\n        }\n\n        gl.bindBuffer(this._targetBufferType, undefined!);\n    }\n\n    /**\n     * Adds an attribute with the provided information to this buffer\n     * @param info The information to be added\n     */\n    public addAttributeLocation(info: AttributeInfo): void {\n        this._hasAttributeLocation = true;\n\n        info.offset = this._elementSize;\n        this._attributes.push(info);\n        this._elementSize += info.size;\n\n        this._stride = this._elementSize * this._typeSize;\n    }\n\n    /**\n     * Replaces the current data in this budder with the provided data\n     * \n     * @param data : the data to be set to this buffer\n     */\n    public setData(data: number[]): void {\n        this.clearData();\n        this.pushBackData(data);\n    }\n\n    /**\n     * Adds data to this buffer\n     * @param data \n     */\n    public pushBackData(data: number[]): void {\n        for (let d of data) {\n            this._data.push(d);\n        }\n    }\n\n    /**\n     * Clears out all data in this buffer\n     */\n    public clearData(): void {\n        this._data.length = 0;\n    }\n\n    public upload(): void {\n\n        gl.bindBuffer(this._targetBufferType, this._buffer);\n\n        let bufferData: ArrayBuffer;\n\n        switch (this._dataType) {\n            case gl.FLOAT:\n                bufferData = new Float32Array(this._data);\n                break;\n\n            case gl.INT:\n                bufferData = new Int32Array(this._data);\n                break;\n\n            case gl.UNSIGNED_INT:\n                bufferData = new Uint32Array(this._data);\n                break;\n\n            case gl.SHORT:\n                bufferData = new Int16Array(this._data);\n                break;\n\n            case gl.UNSIGNED_SHORT:\n                bufferData = new Uint16Array(this._data);\n                break;\n\n            case gl.BYTE:\n                bufferData = new Int8Array(this._data);\n                break;\n\n            case gl.UNSIGNED_BYTE:\n                bufferData = new Uint8Array(this._data);\n                break;\n\n            default:\n                throw new Error(`Unrecognised datatype ${this._dataType.toString()} when uploading`);\n        }\n\n        gl.bufferData(this._targetBufferType, bufferData, gl.STATIC_DRAW);\n\n    }\n\n    /**\n     * Draws this buffer\n     */\n    public draw(): void {\n        if (this._targetBufferType === gl.ARRAY_BUFFER) {\n            gl.drawArrays(this._mode, 0, this._data.length / this._elementSize);\n        } else if (this._targetBufferType === gl.ELEMENT_ARRAY_BUFFER) {\n            gl.drawElements(this._mode, this._data.length, this._dataType, 0);\n        }\n    }\n\n}","import { Material } from \"./material\";\n\nclass MaterialReferenceNode {\n    public material: Material;\n    public referenceCount: number = 1;\n\n    public constructor(material: Material) {\n        this.material = material;\n    }\n\n}\nexport class MaterialManager {\n\n    private static _materials: { [name: string]: MaterialReferenceNode } = {};\n    private constructor() {\n\n    }\n\n    public static registerMaterial(material: Material): void {\n        if (MaterialManager._materials[material.name] === undefined) {\n            MaterialManager._materials[material.name] = new MaterialReferenceNode(material);\n        }\n    }\n\n    public static getMaterial(materialName: string): Material {\n        if (MaterialManager._materials[materialName] === undefined) {\n            return undefined!;\n        }\n\n        MaterialManager._materials[materialName].referenceCount++;\n        return MaterialManager._materials[materialName].material;\n    }\n\n    public static releaseMaterial(materialName: string): void {\n        if (MaterialManager._materials[materialName] === undefined) {\n            console.warn(`Cannot release material: ${materialName} which has not been registered.`);\n            return;\n        }\n\n        MaterialManager._materials[materialName].referenceCount--;\n        if (MaterialManager._materials[materialName].referenceCount < 1) {\n            MaterialManager._materials[materialName].material.destroy();\n            MaterialManager._materials[materialName].material = undefined!;\n            delete MaterialManager._materials[materialName];\n\n        }\n    }\n}","import { Vector3 } from \"./vector3\";\n\nexport class Vector2 {\n    private _x: number;\n    private _y: number;\n\n    public constructor(x: number = 0, y: number = 0) {\n        this._x = x;\n        this._y = y;\n    }\n\n    public get x(): number {\n        return this._x;\n    }\n\n    public set x(value: number) {\n        this._x = value;\n    }\n\n    public get y(): number {\n        return this._y;\n    }\n\n    public set y(value: number) {\n        this._y = value;\n    }\n\n    /** Returns a vector2 with all components set to 0. */\n    public static get zero(): Vector2 {\n        return new Vector2();\n    }\n\n    /** Returns a vector2 with all components set to 1. */\n    public static get one(): Vector2 {\n        return new Vector2(1, 1);\n    }\n\n    public static distance(a: Vector2, b: Vector2): number {\n        let diff = a.clone().subtract(b);\n\n        return Math.sqrt(diff.x * diff.x + diff.y * diff.y);\n    }\n\n    public set(x?: number, y?: number) {\n        if (x !== undefined) {\n            this._x = x;\n        }\n\n        if (y !== undefined) {\n            this._y = y;\n        }\n    }\n\n    public copyFrom(v: Vector2): void {\n        this._x = v._x;\n        this._y = v._y;\n    }\n\n    public toArray(): number[] {\n        return [this._x, this._y];\n    }\n\n    public toFlat32Array(): Float32Array {\n        return new Float32Array(this.toArray());\n    }\n\n    public toVector3(): Vector3 {\n        return new Vector3(this._x, this._y, 0);\n    }\n\n    public setFromJson(json: any): void {\n        if (json.x !== undefined) {\n            this._x = Number(json.x);\n        }\n\n        if (json.y !== undefined) {\n            this._y = Number(json.y);\n        }\n    }\n\n    public add(v: Vector2): Vector2 {\n        this._x += v._x;\n        this._y += v._y;\n\n        return this;\n    }\n\n\n    public subtract(v: Vector2): Vector2 {\n        this._x -= v._x;\n        this._y -= v._y;\n\n        return this;\n    }\n\n\n    public multiply(v: Vector2): Vector2 {\n        this._x *= v._x;\n        this._y *= v._y;\n\n        return this;\n    }\n\n\n    public divide(v: Vector2): Vector2 {\n        this._x /= v._x;\n        this._y /= v._y;\n\n        return this;\n    }\n\n    public scale(scale: number): Vector2 {\n        this._x *= scale;\n        this._y *= scale;\n\n        return this\n    }\n    public clone(): Vector2 {\n        return new Vector2(this._x, this._y);\n    }\n}","import { Vector2 } from \"./vector2\";\n\nexport class Vector3 {\n    private _x: number;\n    private _y: number;\n    private _z: number;\n\n    public constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this._x = x;\n        this._y = y;\n        this._z = z;\n    }\n\n    public get x(): number {\n        return this._x;\n    }\n\n    public set x(value: number) {\n        this._x = value;\n    }\n\n    public get y(): number {\n        return this._y;\n    }\n\n    public set y(value: number) {\n        this._y = value;\n    }\n\n    public get z(): number {\n        return this._z;\n    }\n\n    public set z(value: number) {\n        this._z = value;\n    }\n\n    /** Returns a vector3 with all components set to 0. */\n    public static get zero(): Vector3 {\n        return new Vector3();\n    }\n\n    /** Returns a vector3 with all components set to 1. */\n    public static get one(): Vector3 {\n        return new Vector3(1, 1, 1);\n    }\n\n    public static distance(a: Vector3, b: Vector3): number {\n        let diff = a.clone().subtract(b);\n\n        return Math.sqrt(diff.x * diff.x + diff.y * diff.y + diff.z * diff.z);\n    }\n\n    public set(x?: number, y?: number, z?: number) {\n        if (x !== undefined) {\n            this._x = x;\n        }\n\n        if (y !== undefined) {\n            this._y = y;\n        }\n\n        if (z !== undefined) {\n            this._z = z;\n        }\n    }\n\n    public equals(v: Vector3): boolean {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n\n    /**\n     * Copies the contents of the provided vector to this vector.\n     * @param vector The vector to be copied.\n     */\n    public copyFrom(vector: Vector3): void {\n        this._x = vector._x;\n        this._y = vector._y;\n        this._z = vector._z;\n    }\n\n    public toArray(): number[] {\n        return [this._x, this._y, this._z];\n    }\n\n    public toFlat32Array(): Float32Array {\n        return new Float32Array(this.toArray());\n    }\n\n    public setFromJson(json: any): void {\n        if (json.x !== undefined) {\n            this._x = Number(json.x);\n        }\n\n        if (json.y !== undefined) {\n            this._y = Number(json.y);\n        }\n\n        if (json.z !== undefined) {\n            this._z = Number(json.z);\n        }\n    }\n\n    public add(v: Vector3): Vector3 {\n        this._x += v._x;\n        this._y += v._y;\n        this._z += v._z;\n\n        return this;\n    }\n\n\n    public subtract(v: Vector3): Vector3 {\n        this._x -= v._x;\n        this._y -= v._y;\n        this._z -= v._z;\n\n        return this;\n    }\n\n\n    public multiply(v: Vector3): Vector3 {\n        this._x *= v._x;\n        this._y *= v._y;\n        this._z *= v._z;\n\n        return this;\n    }\n\n\n    public divide(v: Vector3): Vector3 {\n        this._x /= v._x;\n        this._y /= v._y;\n        this._z /= v._z;\n\n        return this;\n    }\n\n    public clone(): Vector3 {\n        return new Vector3(this._x, this._y, this._z);\n    }\n\n    public toVector2(): Vector2 {\n        return new Vector2(this._x, this._y);\n    }\n}","import { Vector3 } from \"../math/vector3\";\nimport { Vector2 } from \"../math/vector2\";\n\n/**\n * Represents the data for a single vertex\n */\nexport class Vertex {\n    public position: Vector3 = Vector3.zero;\n    public textCoords: Vector2 = Vector2.zero;\n\n    public constructor(x: number = 0, y: number = 0, z: number = 0, tu: number = 0, tv: number = 0) {\n        this.position.x = x;\n        this.position.y = y;\n        this.position.z = z;\n\n        this.textCoords.x = tu;\n        this.textCoords.y = tv;\n    }\n\n    public toArray(): number[] {\n        let array: number[] = [];\n\n        array = array.concat(this.position.toArray());\n        array = array.concat(this.textCoords.toArray());\n\n        return array;\n    }\n\n    public toFloat32Array(): Float32Array {\n        return new Float32Array(this.toArray());\n    }\n}","import { gl } from '../gl/gl';\nimport { AttributeInfo, GLBuffer } from '../gl/glBuffer';\nimport { Shader } from '../gl/shader';\nimport { MaterialManager } from './materialManager';\nimport { Matrix4x4 } from '../math/matrix4x4';\nimport { Material } from './material';\nimport { Vertex } from './vertex';\nimport { Vector3 } from '../math/vector3';\n\nexport class Sprite {\n\n    protected _name: string;\n    protected _width: number;\n    protected _height: number;\n    protected _buffer: GLBuffer;\n    protected _materialName: string;\n    protected _material: Material;\n    protected _origin: Vector3 = Vector3.zero;\n\n    protected _vertices: Vertex[] = [];\n\n    public constructor(name: string, materialName: string, width: number = 100, height: number = 100) {\n        this._name = name;\n        this._width = width;\n        this._height = height;\n        this._materialName = materialName;\n\n        this._material = MaterialManager.getMaterial(this._materialName);\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get origin(): Vector3 {\n        return this._origin;\n    }\n\n    public set origin(value: Vector3) {\n        this._origin = value;\n\n        // TODO: This should be better dynamically calculated at the shader\n        this.recalculateVertices()\n    }\n\n    public get width(): number {\n        return this._width;\n    }\n\n    public get height(): number {\n        return this._height;\n    }\n\n    public destroy(): void {\n        this._buffer.destroy();\n        MaterialManager.releaseMaterial(this._materialName);\n        this._material = undefined!;\n        this._materialName = undefined!;\n    }\n\n    public load(): void {\n        this._buffer = new GLBuffer();\n        let positionAttribute = new AttributeInfo();\n\n        // positionAttribute.location = this._shader.getAttributeLocation('a_position');\n        // Standard set of attributes for now. Position attribute to be the first attribute in the shader.\n        positionAttribute.location = 0;\n        positionAttribute.size = 3;\n        this._buffer.addAttributeLocation(positionAttribute);\n\n        const textCoordAttribute = new AttributeInfo();\n        textCoordAttribute.location = 1;\n        textCoordAttribute.size = 2;\n        this._buffer.addAttributeLocation(textCoordAttribute);\n\n        this.calculateVertices();\n    }\n\n    public update(time: number): void {\n\n    }\n\n    public draw(shader: Shader, model: Matrix4x4): void {\n\n        const modelLocation = shader.getUniformLocation('u_model');\n        gl.uniformMatrix4fv(modelLocation, false, model.toFloat32Array());\n\n        const colorLocation = shader.getUniformLocation('u_tint');\n        // Orange tint\n        // gl.uniform4f(colorLocation, 1.0, 0.5, 0.0, 1.0);\n        // Blue tint\n        // gl.uniform4f(colorLocation, 0.0, 0.3, 1.0, 1.0);\n        // White tint\n        gl.uniform4fv(colorLocation, this._material.tint.toFloat32Array());\n\n        // What texture unit to unescape, 0 for now\n        if (this._material.diffuseTexture !== undefined) {\n            this._material.diffuseTexture.activateAndBind(0);\n            const diffuseLocation = shader.getUniformLocation('u_diffuse');\n            gl.uniform1i(diffuseLocation, 0);\n        }\n\n        this._buffer.bind();\n        this._buffer.draw();\n    }\n\n    protected calculateVertices() {\n\n        const minX = -(this._width * this._origin.x);\n        const maxX = this._width * (1.0 - this._origin.x);\n\n        const minY = -(this._height * this._origin.y);\n        const maxY = this._height * (1.0 - this._origin.y);\n\n        this._vertices = [\n            // x, y, z      u,v\n            new Vertex(minX, minY, 0, 0, 0),\n            new Vertex(minX, maxY, 0, 0, 1.0),\n            new Vertex(maxX, maxY, 0, 1.0, 1.0),\n\n            new Vertex(maxX, maxY, 0, 1.0, 1.0),\n            new Vertex(maxX, minY, 0, 1.0, 0),\n            new Vertex(minX, minY, 0, 0, 0)\n        ];\n\n        for (let v of this._vertices) {\n            this._buffer.pushBackData(v.toArray());\n        }\n\n        this._buffer.upload();\n        this._buffer.unbind();\n    }\n\n    protected recalculateVertices() {\n\n        const minX = -(this._width * this._origin.x);\n        const maxX = this._width * (1.0 - this._origin.x);\n\n        const minY = -(this._height * this._origin.y);\n        const maxY = this._height * (1.0 - this._origin.y);\n\n        this._vertices[0].position.set(minX, minY);\n        this._vertices[1].position.set(minX, maxY);\n        this._vertices[2].position.set(maxX, maxY);\n\n        this._vertices[3].position.set(maxX, maxY);\n        this._vertices[4].position.set(maxX, minY);\n        this._vertices[5].position.set(minX, minY);\n\n        this._buffer.clearData();\n        for (let v of this._vertices) {\n            this._buffer.pushBackData(v.toArray());\n        }\n\n        this._buffer.upload();\n        this._buffer.unbind();\n    }\n}","import { SimObject } from '../world/simObject';\nimport { Shader } from '../gl/shader';\nimport { IComponentBuilder } from './IComponentBuilder';\nimport { IComponentData } from './IComponentData';\n\nexport abstract class BaseComponent implements IComponentBuilder {\n    type: string;\n    buildFromJson(json: any): import(\"./IComponent\").IComponent {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected _owner: SimObject;\n    protected _data: IComponentData;\n\n    public name: string;\n\n    public constructor(data: IComponentData) {\n        this._data = data;\n        this.name = data.name;\n    }\n\n    public get owner(): SimObject {\n        return this._owner;\n    }\n\n    public setOwner(owner: SimObject): void {\n        this._owner = owner;\n    }\n\n    public load(): void {\n\n    }\n\n    updateReady() { }\n\n    public update(time: number): void {\n\n    }\n\n    public render(shader: Shader): void {\n\n    }\n}","import { Shader } from '../gl/shader';\nimport { Sprite } from \"../graphics/sprite\";\nimport { BaseComponent } from \"./baseComponent\";\nimport { IComponent } from \"./IComponent\";\nimport { IComponentData } from './IComponentData';\nimport { IComponentBuilder } from './IComponentBuilder';\nimport { Vector3 } from '../math/vector3';\n\nexport class SpriteComponentData implements IComponentData {\n    public name: string;\n    public materialName: string;\n    public origin: Vector3 = Vector3.zero;\n    public width: number;\n    public height: number;\n\n    public setFromJson(json: any): void {\n        if (json.name !== undefined) {\n            this.name = String(json.name);\n        }\n\n        if (json.width !== undefined) {\n            this.width = Number(json.width);\n        }\n\n        if (json.height !== undefined) {\n            this.height = Number(json.height);\n        }\n\n        if (json.materialName !== undefined) {\n            this.materialName = String(json.materialName);\n        }\n\n        if (json.origin !== undefined) {\n            this.origin.setFromJson(json.origin);\n        }\n    }\n}\n\nexport class SpriteComponentBuilder implements IComponentBuilder {\n\n    public get type(): string {\n        return 'sprite';\n    }\n\n    public buildFromJson(json: any): IComponent {\n        const data = new SpriteComponentData();\n        data.setFromJson(json);\n        return new SpriteComponent(data);\n    }\n\n}\n\nexport class SpriteComponent extends BaseComponent {\n\n    private _sprite: Sprite;\n    private width: number;\n    private height: number;\n\n\n    public constructor(data: SpriteComponentData) {\n        super(data);\n\n        this.width = data.width;\n        this.height = data.height;\n        this._sprite = new Sprite(data.name, data.materialName, this.width, this.height);\n        if (!data.origin.equals(Vector3.zero)) {\n            this._sprite.origin.copyFrom(data.origin);\n        }\n    }\n\n    public load(): void {\n        this._sprite.load();\n    }\n\n    public render(shader: Shader): void {\n        this._sprite.draw(shader, this.owner.worldMatrix);\n        super.render(shader);\n    }\n}","import { Message } from './message';\nimport { IMessageHandler } from './IMessageHandler';\n\nexport class MessageSubscritionNode {\n\n    public message: Message;\n\n    public handler: IMessageHandler;\n\n    public constructor(message: Message, handler: IMessageHandler) {\n        this.message = message;\n        this.handler = handler;\n    }\n}","import { IMessageHandler } from './IMessageHandler';\nimport { Message, MessagePriotity } from './message';\nimport { MessageSubscritionNode } from './messageSubscriptionNode';\n\nexport class MessageBus {\n\n    private static _subscriptions: { [code: string]: IMessageHandler[] } = {};\n    private static _normalQueueMessagePerUpdate: number = 10;\n    private static _normalMessageQueue: MessageSubscritionNode[] = [];\n\n    private constructor() {\n\n    }\n\n    public static addSubscription(code: string, handler: IMessageHandler): void {\n        if (MessageBus._subscriptions[code] === undefined) {\n            MessageBus._subscriptions[code] = [];\n        }\n\n        if (MessageBus._subscriptions[code].indexOf(handler) !== -1) {\n            console.warn(`Attemping to add  a duplicate handler to code ${code}. Subscription not added.`);\n        } else {\n            MessageBus._subscriptions[code].push(handler);\n        }\n    }\n\n    public static removeSubscription(code: string, handler: IMessageHandler): void {\n\n        if (MessageBus._subscriptions[code] === undefined) {\n            console.warn(`Cannot unsubscribe handler from the code: ${code}, because that code is not subscribed to.`);\n            return;\n        }\n\n        const nodeIndex = MessageBus._subscriptions[code].indexOf(handler);\n        if (nodeIndex !== -1) {\n            MessageBus._subscriptions[code].splice(nodeIndex, 1);\n        }\n    }\n\n    public static post(message: Message): void {\n        console.log('Message posted', message);\n        const handlers = MessageBus._subscriptions[message.code];\n        if (handlers === undefined) {\n            return;\n        }\n\n        for (let h of handlers) {\n            if (message.priority === MessagePriotity.HIGH) {\n                h.onMessage(message);\n            } else {\n                MessageBus._normalMessageQueue.push(new MessageSubscritionNode(message, h));\n            }\n\n        }\n    }\n\n    public static update(time: number): void {\n        if (MessageBus._normalMessageQueue.length === 0) {\n            return;\n        }\n\n        const messageLimit = Math.min(MessageBus._normalQueueMessagePerUpdate, MessageBus._normalMessageQueue.length);\n        for (let i = 0; i < messageLimit; i++) {\n            const node = MessageBus._normalMessageQueue.pop();\n            node && node.handler.onMessage(node.message);\n        }\n    }\n\n}","import { MessageBus } from \"./messageBus\";\nimport { IMessageHandler } from \"./IMessageHandler\";\n\nexport enum MessagePriotity {\n    NORMAL,\n    HIGH\n}\n\nexport class Message {\n    public code: string;\n\n    public context: any;\n\n    public sender: any;\n\n    public priority: MessagePriotity;\n\n    public constructor(code: string, sender: any, context?: any, priority: MessagePriotity = MessagePriotity.NORMAL) {\n        this.code = code;\n        this.sender = sender;\n        this.context = context;\n        this.priority = priority;\n    }\n\n    public static send(code: string, sender: any, context?: any): void {\n        MessageBus.post(new Message(code, sender, context));\n    }\n\n    public static sendPriority(code: string, sender: any, context?: any): void {\n        MessageBus.post(new Message(code, sender, context, MessagePriotity.HIGH));\n    }\n\n    public static subscribe(code: string, handler: IMessageHandler): void {\n        MessageBus.addSubscription(code, handler);\n    }\n\n    public static unsubscribe(code: string, handler: IMessageHandler): void {\n        MessageBus.removeSubscription(code, handler);\n    }\n}","import { IAssetLoader } from \"./IAssetLoader\";\nimport { IAsset } from './IAsset';\nimport { AssetManager } from \"./assetManager\";\n\nexport class ImageAsset implements IAsset {\n    public readonly name: string;\n    public readonly data: HTMLImageElement;\n\n    public constructor(name: string, data: HTMLImageElement) {\n        this.name = name;\n        this.data = data;\n    }\n\n    get width(): number {\n        return this.data.width;\n    }\n\n    get height(): number {\n        return this.data.height;\n    }\n}\n\nexport class ImageAssetLoader implements IAssetLoader {\n\n    public get supportedExtensions(): string[] {\n        return ['png', 'gif', 'jpg'];\n    }\n\n    public loadAsset(assetName: string): void {\n        const image: HTMLImageElement = new Image();\n\n        image.onload = this.onImageLoaded.bind(this, assetName, image);\n\n        image.src = assetName;\n    }\n\n    private onImageLoaded(assetName: string, image: HTMLImageElement): void {\n        console.log('OnImageLoaded: assetName/Image', assetName, image);\n\n        const asset = new ImageAsset(assetName, image);\n        AssetManager.onAssetLoaded(asset);\n\n    }\n\n}","import { IAssetLoader } from \"./IAssetLoader\";\nimport { IAsset } from './IAsset';\nimport { AssetManager } from \"./assetManager\";\n\nexport class JsonAsset implements IAsset {\n    public readonly name: string;\n    public readonly data: any;\n\n    public constructor(name: string, data: any) {\n        this.name = name;\n        this.data = data;\n    }\n}\n\nexport class JsonAssetLoader implements IAssetLoader {\n\n    public get supportedExtensions(): string[] {\n        return ['json'];\n    }\n\n    public loadAsset(assetName: string): void {\n        const request: XMLHttpRequest = new XMLHttpRequest();\n        request.open('GET', assetName);\n        request.addEventListener('load', this.onJsonLoaded.bind(this, assetName, request));\n        request.send();\n    }\n\n    private onJsonLoaded(assetName: string, request: XMLHttpRequest): void {\n        console.log('OnImageLoaded: assetName/Image', assetName, request);\n\n        if (request.readyState === request.DONE) {\n            const json = JSON.parse(request.responseText);\n            const asset = new JsonAsset(assetName, json);\n            AssetManager.onAssetLoaded(asset);\n        }\n    }\n}","﻿import { IAsset } from \"./IAsset\";\nimport { IAssetLoader } from \"./IAssetLoader\";\nimport { AssetManager } from \"./assetManager\";\n\n/**\n * Represents a text file asset.\n */\nexport class TextAsset implements IAsset {\n\n    /** The name of this asset. */\n    public readonly name: string;\n\n    /** The content of this asset. */\n    public readonly data: string;\n\n    /**\n     * Creates a new text asset.\n     * @param name The name of this asset.\n     * @param data The content of this asset.\n     */\n    public constructor(name: string, data: string) {\n        this.name = name;\n        this.data = data;\n    }\n}\n\n/**\n * The loader for a text asset.\n */\nexport class TextAssetLoader implements IAssetLoader {\n\n    /**\n     * The list of supported file extensions.\n     */\n    public get supportedExtensions(): string[] {\n        return [\"txt\"];\n    }\n\n    /**\n     * Loads a text asset with the provided name.\n     * @param assetName The asset to be loaded.\n     */\n    public loadAsset(assetName: string): void {\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", assetName);\n        request.addEventListener(\"load\", this.onTextLoaded.bind(this, assetName, request));\n        request.send();\n    }\n\n    /**\n     * Fired when a text asset has loaded.\n     * @param assetName The name of the asset.\n     * @param request The request object.\n     */\n    private onTextLoaded(assetName: string, request: XMLHttpRequest): void {\n        console.debug(\"onTextLoaded: assetName/request\", assetName, request);\n\n        if (request.readyState === request.DONE) {\n            let asset = new TextAsset(assetName, request.responseText);\n            AssetManager.onAssetLoaded(asset);\n        }\n    }\n}\n","import { IAssetLoader } from './IAssetLoader';\nimport { IAsset } from './IAsset';\nimport { Message } from '../message/message';\n\nimport { ImageAssetLoader } from './imageAssetLoader';\nimport { JsonAssetLoader } from './jsonAssetLoader';\nimport { TextAssetLoader } from './TextAssetLoader';\n\nexport const MESSAGE_ASSET_LOADER_ASSET_LOADED = 'MESSAGE_ASSET_LOADER_ASSET_LOADED::';\n\nexport class AssetManager {\n    private static _loaders: IAssetLoader[] = [];\n    private static _loadedAssets: { [name: string]: IAsset } = {};\n\n    private constructor() {\n\n    }\n\n    public static initialize(): void {\n        AssetManager._loaders.push(new ImageAssetLoader());\n        AssetManager._loaders.push(new JsonAssetLoader());\n        AssetManager._loaders.push(new TextAssetLoader());\n    }\n\n    public registerLoader(loader: IAssetLoader): void {\n        AssetManager._loaders.push(loader);\n    }\n\n    public static onAssetLoaded(asset: IAsset): void {\n        AssetManager._loadedAssets[asset.name] = asset;\n        Message.send(MESSAGE_ASSET_LOADER_ASSET_LOADED + asset.name, this, asset);\n    }\n\n    public static loadAsset(assetName: string): void {\n        let extension: string = assetName.split('.').pop() as string;\n        extension = extension ? extension.toLowerCase() : extension;\n\n        for (let l of AssetManager._loaders) {\n            if (l.supportedExtensions.indexOf(extension) !== -1) {\n                l.loadAsset(assetName);\n                return;\n            }\n        }\n\n        console.warn(`Unable to load asset with extension ${extension}, because there is no loader associated with it.`)\n    }\n\n    public static isAssetLoaded(assetName: string): boolean {\n        return AssetManager._loadedAssets[assetName] !== undefined;\n    }\n\n    public static getAsset(assetName: string): IAsset {\n        if (AssetManager.isAssetLoaded(assetName)) {\n            return AssetManager._loadedAssets[assetName];\n        } else {\n            AssetManager.loadAsset(assetName);\n        }\n\n        // @ts-ignore\n        return undefined;\n    }\n}","import { Vector2 } from '../math/vector2';\nimport { Sprite } from './sprite';\nimport { IMessageHandler } from '../message/IMessageHandler';\nimport { Message } from '../message/message';\nimport { MESSAGE_ASSET_LOADER_ASSET_LOADED, AssetManager } from '../assets/assetManager';\nimport { ImageAsset } from '../assets/imageAssetLoader';\nimport { MaterialManager } from './materialManager';\n\nclass UVInfo {\n    public min: Vector2;\n    public max: Vector2;\n    public constructor(min: Vector2, max: Vector2) {\n        this.min = min;\n        this.max = max;\n    }\n}\n\nexport class AnimatedSpriteInfo {\n\n    /** The name of this sprite */\n    public name: string;\n\n    /** The name of the material used by this sprite */\n    public materialName: string;\n\n    /** The width of this sprite. */\n    public width: number = 100;\n\n    /** The height of this sprite. */\n    public height: number = 100;\n\n    /** The frame width of this sprite. */\n    public frameWidth: number = 10;\n\n    /** The frame height of this sprite. */\n    public frameHeight: number = 10;\n\n    /** The number of frames to be animated. */\n    public frameCount: number = 1;\n\n    /** The sequence of frame indexes to be played. */\n    public frameSequence: number[] = [];\n\n    /** The number of milliseconds each frame takes. */\n    public frameTime: number = 60;\n}\n\nexport class AnimatedSprite extends Sprite implements IMessageHandler {\n\n    private _frameWidth: number;\n    private _frameHeight: number;\n    private _frameCount: number;\n    private _frameSequence: number[];\n\n    private _frameTime: number = 33;\n    private _frameUVs: UVInfo[] = [];\n\n    private _currentFrame: number = 0;\n    protected _currentTime: number = 0;\n    private _assetLoaded: boolean = false;\n    private _assetWidth: number = 2;\n    private _assetHeight: number = 2;\n\n    private _isPlaying: boolean = true;\n\n    public constructor(info: AnimatedSpriteInfo) {\n        super(info.name, info.materialName, info.width, info.height);\n\n        this._frameWidth = info.frameWidth;\n        this._frameHeight = info.frameHeight;\n        this._frameCount = info.frameCount;\n        this._frameSequence = info.frameSequence;\n        this._frameTime = info.frameTime;\n\n        Message.subscribe(MESSAGE_ASSET_LOADER_ASSET_LOADED + this._material.diffuseTextureName, this);\n\n    }\n\n    public get isPlaying(): boolean {\n        return this._isPlaying;\n    }\n\n    public destroy(): void {\n        super.destroy();\n    }\n\n    public play() {\n        this._isPlaying = true;\n    }\n\n    public stop() {\n        this._isPlaying = false;\n    }\n\n    public setFrame(frameNumber: number) {\n        if (frameNumber >= this._frameCount) {\n            throw new Error(`Frame is out of range: ${frameNumber}, frame count ${this._frameCount}`);\n        }\n\n        this._currentFrame = frameNumber;\n    }\n\n    /**\n     * Calculates UV coordinates once the texture is loaded\n     * \n     * @param message \n     */\n    public onMessage(message: Message): void {\n        if (message.code === MESSAGE_ASSET_LOADER_ASSET_LOADED + this._material.diffuseTextureName) {\n\n            this._assetLoaded = true;\n\n            const asset = message.context as ImageAsset;\n            this._assetWidth = asset.width;\n            this._assetHeight = asset.height;\n\n            this._calculateUVs();\n        }\n    }\n\n    public load(): void {\n        super.load();\n\n        if (!this._assetLoaded) {\n            this.setupFromMaterial();\n        }\n    }\n\n    public update(time: number): void {\n\n        if (!this._assetLoaded) {\n            this.setupFromMaterial();\n            return;\n        }\n\n        if (!this._isPlaying) {\n            return;\n        }\n\n        this._currentTime += time;\n\n        if (this._currentTime > this._frameTime) {\n            this._currentFrame++;\n            this._currentTime = 0;\n\n            if (this._currentFrame >= this._frameSequence.length) {\n                this._currentFrame = 0;\n            }\n\n            // Gets current frame U and V coordinates within the tiled texture containing all sprite frames\n            // Example data as reference\n            // this._vertices = [\n            //     // x, y, z      u,v\n            //     new Vertex(0, 0, 0, 0, 0),\n            //     new Vertex(0, this._height, 0, 0, 1.0),\n            //     new Vertex(this._width, this._height, 0, 1.0, 1.0),\n\n            //     new Vertex(this._width, this._height, 0, 1.0, 1.0),\n            //     new Vertex(this._width, 0, 0, 1.0, 0),\n            //     new Vertex(0, 0, 0, 0, 0)\n            // ];\n            const frameUVs = this._frameSequence[this._currentFrame];\n            this._vertices[0].textCoords.copyFrom(this._frameUVs[frameUVs].min);\n            this._vertices[1].textCoords = new Vector2(this._frameUVs[frameUVs].min.x, this._frameUVs[frameUVs].max.y);\n\n            this._vertices[2].textCoords.copyFrom(this._frameUVs[frameUVs].max);\n            this._vertices[3].textCoords.copyFrom(this._frameUVs[frameUVs].max);\n\n            this._vertices[4].textCoords = new Vector2(this._frameUVs[frameUVs].max.x, this._frameUVs[frameUVs].min.y);\n            this._vertices[5].textCoords.copyFrom(this._frameUVs[frameUVs].min);\n\n            this._buffer.clearData();\n            for (let v of this._vertices) {\n                this._buffer.pushBackData(v.toArray());\n            }\n\n            this._buffer.upload();\n            this._buffer.bind();\n\n        }\n\n        super.update(time);\n    }\n\n    private _calculateUVs(): void {\n\n        let totalWidth: number = 0;\n        let yValue: number = 0;\n\n        for (let i = 0; i < this._frameCount; ++i) {\n            totalWidth = i * this._frameWidth;\n\n            if (totalWidth > this._assetWidth) {\n                yValue++;\n                totalWidth = 0;\n            }\n\n            let uMin = (i * this._frameWidth) / this._assetWidth;\n            let vMin = (yValue * this._frameHeight) / this._assetHeight;\n            let min: Vector2 = new Vector2(uMin, vMin);\n\n            let uMax = ((i * this._frameWidth) + this._frameWidth) / this._assetWidth;\n            let vMax = ((yValue * this._frameHeight) + this._frameHeight) / this._assetHeight;\n            let max: Vector2 = new Vector2(uMax, vMax);\n\n            this._frameUVs.push(new UVInfo(min, max));\n\n        }\n    }\n\n    // Fixes race condition where texture has been cached\n    private setupFromMaterial() {\n        if (!this._assetLoaded) {\n            const material = MaterialManager.getMaterial(this._materialName);\n            if (material.diffuseTexture.isLoaded) {\n                if (AssetManager.isAssetLoaded(material.diffuseTextureName)) {\n                    this._assetWidth = material.diffuseTexture.width;\n                    this._assetHeight = material.diffuseTexture.height;\n                    this._assetLoaded = true;\n                    this._calculateUVs();\n                }\n            }\n        }\n    }\n}","import { Shader } from '../gl/shader';\nimport { AnimatedSprite, AnimatedSpriteInfo } from \"../graphics/animatedSprite\";\nimport { BaseComponent } from \"./baseComponent\";\nimport { IComponent } from \"./IComponent\";\nimport { IComponentData } from './IComponentData';\nimport { IComponentBuilder } from './IComponentBuilder';\nimport { SpriteComponentData } from './spriteComponent';\nimport { Vector3 } from '../math/vector3';\n\nexport class AnimatedSpriteComponentData extends SpriteComponentData implements IComponentData {\n\n    public frameWidth: number;\n    public frameHeight: number;\n    public frameCount: number;\n    public frameSequence: number[] = [];\n    public autoPlay: boolean = true;\n    public frameTime: number = 33;\n\n    public setFromJson(json: any): void {\n        super.setFromJson(json);\n\n        if (json.autoPlay !== undefined) {\n            this.autoPlay = Boolean(json.autoPlay);\n        }\n\n        if (json.frameWidth === undefined) {\n            throw new Error(\"AnimatedComponentData requires 'frameWidth' to be defined\");\n        } else {\n            this.frameWidth = Number(json.frameWidth);\n        }\n\n        if (json.frameHeight === undefined) {\n            throw new Error(\"AnimatedComponentData requires 'frameHeight' to be defined\");\n        } else {\n            this.frameHeight = Number(json.frameHeight);\n        }\n\n        if (json.frameCount === undefined) {\n            throw new Error(\"AnimatedComponentData requires 'frameCount' to be defined\");\n        } else {\n            this.frameCount = Number(json.frameCount);\n        }\n\n        if (json.frameSequence === undefined) {\n            throw new Error(\"AnimatedComponentData requires 'frameSequence' to be defined\");\n        } else {\n            this.frameSequence = json.frameSequence;\n        }\n\n        if (json.frameTime !== undefined) {\n            this.frameTime = Number(json.frameTime);\n        }\n    }\n}\n\nexport class AnimatedSpriteComponentBuilder implements IComponentBuilder {\n\n    public get type(): string {\n        return 'animatedSprite';\n    }\n\n    public buildFromJson(json: any): IComponent {\n        const data = new AnimatedSpriteComponentData();\n        data.setFromJson(json);\n        return new AnimatedSpriteComponent(data);\n    }\n\n}\n\nexport class AnimatedSpriteComponent extends BaseComponent {\n\n    private _autoPlay: boolean;\n    private _sprite: AnimatedSprite;\n\n    public constructor(data: AnimatedSpriteComponentData) {\n        super(data);\n\n        this._autoPlay = data.autoPlay;\n\n        const spriteInfo = new AnimatedSpriteInfo();\n        spriteInfo.name = name;\n        spriteInfo.materialName = data.materialName;\n        spriteInfo.frameWidth = data.frameWidth;\n        spriteInfo.frameHeight = data.frameHeight;\n        spriteInfo.width = data.frameWidth;\n        spriteInfo.height = data.frameHeight;\n        spriteInfo.frameCount = data.frameCount\n        spriteInfo.frameSequence = data.frameSequence;\n        spriteInfo.frameTime = data.frameTime;\n\n        this._sprite = new AnimatedSprite(spriteInfo);\n        if (!data.origin.equals(Vector3.zero)) {\n            this._sprite.origin.copyFrom(data.origin);\n        }\n    }\n\n    public get isPlaying(): boolean {\n        return this._sprite.isPlaying;\n    }\n\n    public load(): void {\n        this._sprite.load();\n    }\n\n    public updateReady() {\n        if (!this._autoPlay) {\n            this._sprite.stop();\n        }\n    }\n\n    public update(time: number): void {\n\n        this._sprite.update(time);\n\n        super.update(time);\n    }\n\n    public render(shader: Shader): void {\n        this._sprite.draw(shader, this.owner.worldMatrix);\n        super.render(shader);\n    }\n\n    public play() {\n        this._sprite.play();\n    }\n\n    public stop() {\n        this._sprite.stop();\n    }\n\n    public setFrame(frameNumber: number) {\n        this._sprite.setFrame(frameNumber);\n    }\n}","import { gl } from '../gl/gl';\nimport { Message } from '../message/message';\nimport { MESSAGE_ASSET_LOADER_ASSET_LOADED, AssetManager } from '../assets/assetManager';\nimport { IMessageHandler } from '../message/IMessageHandler';\nimport { ImageAsset } from '../assets/imageAssetLoader';\n\nconst LEVEL: number = 0;\nconst BORDER: number = 0;\nconst TEMP_IMAGE_DATA: Uint8Array = new Uint8Array([255, 255, 255, 255]);\n\nexport class Texture implements IMessageHandler {\n\n    private _name: string;\n    private _handle: WebGLTexture;\n    private _isLoaded: boolean = false;\n    private _width: number;\n    private _height: number;\n\n    public constructor(name: string, width: number = 1, height: number = 1) {\n        this._name = name;\n        this._width = width;\n        this._height = height;\n\n        this._handle = gl.createTexture() as WebGLTexture;\n\n        this.bind();\n\n        gl.texImage2D(gl.TEXTURE_2D, LEVEL, gl.RGBA, 1, 1, BORDER, gl.RGBA, gl.UNSIGNED_BYTE, TEMP_IMAGE_DATA);\n\n        const asset = AssetManager.getAsset(this.name) as ImageAsset;\n        if (asset !== undefined) {\n            this.loadTextureFromAsset(asset);\n        } else {\n            Message.subscribe(MESSAGE_ASSET_LOADER_ASSET_LOADED + this.name, this);\n        }\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get isLoaded(): boolean {\n        return this._isLoaded;\n    }\n\n    public get width(): number {\n        return this._width;\n    }\n\n    public get height(): number {\n        return this._height;\n    }\n\n    public destroy(): void {\n        gl.deleteTexture(this._handle);\n    }\n\n    public activateAndBind(textureUnit: number = 0): void {\n        gl.activeTexture(gl.TEXTURE0 + textureUnit);\n\n        this.bind();\n    }\n\n    public bind(): void {\n        gl.bindTexture(gl.TEXTURE_2D, this._handle);\n    }\n\n    public unbind(): void {\n        gl.bindTexture(gl.TEXTURE_2D, undefined!);\n    }\n\n    public onMessage(message: Message): void {\n        if (message.code === MESSAGE_ASSET_LOADER_ASSET_LOADED + this.name) {\n            this.loadTextureFromAsset(message.context as ImageAsset);\n        }\n    }\n\n    private loadTextureFromAsset(asset: ImageAsset): void {\n        this._width = asset.width;\n        this._height = asset.height;\n\n        this.bind();\n\n        gl.texImage2D(gl.TEXTURE_2D, LEVEL, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, asset.data);\n\n        if (this.isPowerOf2()) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        } else {\n            // Do not generate a mipmap and clamp wrapping to edge\n            // If it isnot a powered of 2 texture we cannot tile it in webgl\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        }\n\n        // TODO: Set texture filtering based on configuration\n        // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        // Pixelated look with NEAREST\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        this._isLoaded = true;\n\n    }\n\n    private isPowerOf2(): boolean {\n        return (this.isValuePowerOf2(this._width) && this.isValuePowerOf2(this._height));\n    }\n\n    private isValuePowerOf2(value: number): boolean {\n        return (value & (value - 1)) == 0;\n    }\n\n}","\nimport { Texture } from './texture';\n\nclass TextureReferenceNode {\n    public texture: Texture;\n    public referenceCount: number = 1;\n\n    public constructor(texture: Texture) {\n        this.texture = texture;\n    }\n}\n\nexport class TextureManager {\n\n    private static _textures: { [name: string]: TextureReferenceNode } = {};\n\n    private constructor() {\n\n    }\n\n    public static getTexture(textureName: string): Texture {\n        if (TextureManager._textures[name] === undefined) {\n            const texture = new Texture(textureName);\n            TextureManager._textures[textureName] = new TextureReferenceNode(texture);\n        } else {\n            TextureManager._textures[textureName].referenceCount++;\n        }\n\n        return TextureManager._textures[textureName].texture;\n    }\n\n    public static releaseTexture(textureName: string): void {\n        if (TextureManager._textures[name] === undefined) {\n            console.warn(`A texture named ${textureName} does not exist and cannot be released`);\n        } else {\n            TextureManager._textures[textureName].referenceCount--;\n            if (TextureManager._textures[textureName].referenceCount < 1) {\n                TextureManager._textures[textureName].texture.destroy();\n                TextureManager._textures[textureName] = undefined! as TextureReferenceNode;\n                delete TextureManager._textures[textureName];\n            }\n\n        }\n    }\n}","import { Texture } from \"./texture\";\nimport { Color } from './color';\nimport { TextureManager } from \"./textureManager\";\n\nexport class Material {\n    private _name: string;\n    private _diffuseTextureName: string;\n    private _diffuseTexture: Texture;\n    private _tint: Color;\n\n    public constructor(name: string, diffuseTextureName: string, tint: Color) {\n        this._name = name;\n        this._diffuseTextureName = diffuseTextureName;\n        this._tint = tint;\n\n        if (this._diffuseTextureName !== undefined) {\n            this._diffuseTexture = TextureManager.getTexture(this._diffuseTextureName);\n        }\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get diffuseTextureName(): string {\n        return this._diffuseTextureName;\n    }\n\n    public get diffuseTexture(): Texture {\n        return this._diffuseTexture;\n    }\n\n    public get tint(): Color {\n        return this._tint;\n    }\n\n    public set diffuseTextureName(value: string) {\n        if (this._diffuseTextureName !== undefined) {\n            TextureManager.releaseTexture(this._diffuseTextureName);\n        }\n        this._diffuseTextureName = value;\n\n        if (this._diffuseTextureName !== undefined) {\n            this._diffuseTexture = TextureManager.getTexture(this._diffuseTextureName);\n        }\n    }\n\n    public destroy(): void {\n        TextureManager.releaseTexture(this._diffuseTextureName);\n        this._diffuseTexture = undefined!;\n    }\n\n}","export class Color {\n    private _r: number;\n    private _g: number;\n    private _b: number;\n    private _a: number;\n\n    public constructor(r: number = 255, g: number = 255, b: number = 255, a: number = 255) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a;\n    }\n\n    public get r(): number {\n        return this._r;\n    }\n\n    public get rFloat(): number {\n        return this._r / 255.0;\n    }\n\n    public set r(value) {\n        this._r = value;\n    }\n\n    public get g(): number {\n        return this._g;\n    }\n\n    public get gFloat(): number {\n        return this._g / 255.0;\n    }\n\n    public set g(value) {\n        this._g = value;\n    }\n\n    public get b(): number {\n        return this._b;\n    }\n\n    public get bFloat(): number {\n        return this._b / 255.0;\n    }\n\n    public set b(value) {\n        this._b = value;\n    }\n\n    public get a(): number {\n        return this._a;\n    }\n\n    public get aFloat(): number {\n        return this._a / 255.0;\n    }\n\n    public set a(value) {\n        this._a = value;\n    }\n\n    public toArray(): number[] {\n        return [this._r, this._g, this._b, this._a];\n    }\n\n    public toFloatArray(): number[] {\n        return [this._r / 255, this._g / 255, this._b / 255, this._a / 255];\n    }\n\n    public toFloat32Array(): Float32Array {\n        return new Float32Array(this.toFloatArray());\n    }\n\n    public static white(): Color {\n        return new Color(255, 255, 255, 255);\n    }\n\n    public static black(): Color {\n        return new Color(0, 0, 0, 255);\n    }\n\n    public static red(): Color {\n        return new Color(255, 0, 0, 255);\n    }\n\n    public static green(): Color {\n        return new Color(0, 255, 0, 255);\n    }\n\n    public static blue(): Color {\n        return new Color(0, 0, 255, 255);\n    }\n\n}","\nimport { Vector3 } from './vector3';\n\n// Migrate math to use gl matrix library\n// http://glmatrix.net/\n// import { mat4 } from 'gl-matrix';\n\nexport class Matrix4x4 {\n\n    private _data: number[] = [];\n\n    private constructor() {\n        // Identity matrix\n        this._data = [\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            // Translation: x, y, z, n\n            0, 0, 0, 1,\n        ];\n    }\n\n    public get data(): number[] {\n        return this._data;\n    }\n\n    public static identity(): Matrix4x4 {\n        return new Matrix4x4();\n    }\n\n    // orthographic matrix renders all as it if would all be flat\n    public static orthographic(left: number, right: number, bottom: number, top: number, nearClip: number, farClip: number): Matrix4x4 {\n        const m = new Matrix4x4();\n\n        const lr: number = 1.0 / (left - right);\n        const bt: number = 1.0 / (bottom - top);\n        const nf: number = 1.0 / (nearClip - farClip);\n\n        // Replacing the diagonal 1s\n        m._data[0] = -2.0 * lr;\n        m._data[5] = -2.0 * bt;\n        m._data[10] = -2.0 * nf;\n\n        // Replacing last row\n        m._data[12] = (left + right) * lr;\n        m._data[13] = (top + bottom) * bt;\n        m._data[14] = (farClip + nearClip) * nf;\n\n        return m;\n    }\n\n    public static translation(position: Vector3): Matrix4x4 {\n        const m: Matrix4x4 = new Matrix4x4();\n\n        m._data[12] = position.x;\n        m._data[13] = position.y;\n        m._data[14] = position.z;\n\n        return m;\n    }\n\n    /**\n     * Creates a rotation matrix on the X axis from the provided angle in radians.\n     * @param angleInRadians The angle in radians.\n     */\n    public static rotationX(angleInRadians: number): Matrix4x4 {\n        let m = new Matrix4x4();\n\n        let c = Math.cos(angleInRadians);\n        let s = Math.sin(angleInRadians);\n\n        m._data[5] = c;\n        m._data[6] = s;\n        m._data[9] = -s;\n        m._data[10] = c;\n\n        return m;\n    }\n\n    /**\n     * Creates a rotation matrix on the Y axis from the provided angle in radians.\n     * @param angleInRadians The angle in radians.\n     */\n    public static rotationY(angleInRadians: number): Matrix4x4 {\n        let m = new Matrix4x4();\n\n        let c = Math.cos(angleInRadians);\n        let s = Math.sin(angleInRadians);\n\n        m._data[0] = c;\n        m._data[2] = -s;\n        m._data[8] = s;\n        m._data[10] = c;\n\n        return m;\n    }\n\n    /**\n     * Creates a rotation matrix on the Z axis from the provided angle in radians.\n     * \n     *  0..PI -> Half Rotation\n     *  0..2*PI -> Full Rotation\n     * \n     * @param angleInRadians The angle in radians.\n     */\n    public static rotationZ(angleInRadians: number): Matrix4x4 {\n        let m = new Matrix4x4();\n\n        let c = Math.cos(angleInRadians);\n        let s = Math.sin(angleInRadians);\n\n        m._data[0] = c;\n        m._data[1] = s;\n        m._data[4] = -s;\n        m._data[5] = c;\n\n        return m;\n    }\n\n    /**\n     * Creates a rotation matrix from the provided angles in radians.\n     * @param xRadians The angle in radians on the X axis. \n     * @param yRadians The angle in radians on the Y axis. \n     * @param zRadians The angle in radians on the Z axis. \n     */\n    public static rotationXYZ(xRadians: number, yRadians: number, zRadians: number): Matrix4x4 {\n        let rx = Matrix4x4.rotationX(xRadians);\n        let ry = Matrix4x4.rotationY(yRadians);\n        let rz = Matrix4x4.rotationZ(zRadians);\n\n        // ZYX\n        return Matrix4x4.multiply(Matrix4x4.multiply(rz, ry), rx);\n    }\n\n    /**\n     * Creates a scale matrix.\n     * @param scale The scale to use.\n     */\n    public static scale(scale: Vector3): Matrix4x4 {\n        let m = new Matrix4x4();\n\n        m._data[0] = scale.x;\n        m._data[5] = scale.y;\n        m._data[10] = scale.z;\n\n        return m;\n    }\n\n    /**\n     * Multiplies matrix a by matrix b and returns the result.\n     * @param a The first matrix.\n     * @param b The second matrix.\n     */\n    public static multiply(a: Matrix4x4, b: Matrix4x4): Matrix4x4 {\n        let m = new Matrix4x4();\n\n        let b00 = b._data[0 * 4 + 0];\n        let b01 = b._data[0 * 4 + 1];\n        let b02 = b._data[0 * 4 + 2];\n        let b03 = b._data[0 * 4 + 3];\n        let b10 = b._data[1 * 4 + 0];\n        let b11 = b._data[1 * 4 + 1];\n        let b12 = b._data[1 * 4 + 2];\n        let b13 = b._data[1 * 4 + 3];\n        let b20 = b._data[2 * 4 + 0];\n        let b21 = b._data[2 * 4 + 1];\n        let b22 = b._data[2 * 4 + 2];\n        let b23 = b._data[2 * 4 + 3];\n        let b30 = b._data[3 * 4 + 0];\n        let b31 = b._data[3 * 4 + 1];\n        let b32 = b._data[3 * 4 + 2];\n        let b33 = b._data[3 * 4 + 3];\n        let a00 = a._data[0 * 4 + 0];\n        let a01 = a._data[0 * 4 + 1];\n        let a02 = a._data[0 * 4 + 2];\n        let a03 = a._data[0 * 4 + 3];\n        let a10 = a._data[1 * 4 + 0];\n        let a11 = a._data[1 * 4 + 1];\n        let a12 = a._data[1 * 4 + 2];\n        let a13 = a._data[1 * 4 + 3];\n        let a20 = a._data[2 * 4 + 0];\n        let a21 = a._data[2 * 4 + 1];\n        let a22 = a._data[2 * 4 + 2];\n        let a23 = a._data[2 * 4 + 3];\n        let a30 = a._data[3 * 4 + 0];\n        let a31 = a._data[3 * 4 + 1];\n        let a32 = a._data[3 * 4 + 2];\n        let a33 = a._data[3 * 4 + 3];\n\n        m._data[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n        m._data[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n        m._data[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n        m._data[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n        m._data[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n        m._data[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n        m._data[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n        m._data[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n        m._data[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n        m._data[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n        m._data[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n        m._data[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n        m._data[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n        m._data[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n        m._data[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n        m._data[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n\n        return m;\n    }\n\n    /** Returns the data of this matrix as a Float32Array. */\n    public toFloat32Array(): Float32Array {\n        return new Float32Array(this._data);\n    }\n\n    /**\n     * Creates a copy of matrix m.\n     * @param m The matrix to copy.\n     */\n    public copyFrom(m: Matrix4x4): void {\n        for (let i = 0; i < 16; ++i) {\n            this._data[i] = m._data[i];\n        }\n    }\n}","import { Vector3 } from './vector3';\nimport { Matrix4x4 } from './matrix4x4';\n\n/**\n * Represents the transformation of an object, providing position, rotation and scale.\n */\nexport class Transform {\n\n    /** The position. Default: Vector3.zero */\n    public position: Vector3 = Vector3.zero;\n\n    /** The rotation. Default: Vector3.zero */\n    public rotation: Vector3 = Vector3.zero;\n\n    /** The rotation. Default: Vector3.one */\n    public scale: Vector3 = Vector3.one;\n\n    /**\n     * Creates a copy of the provided transform.\n     * @param transform The transform to be copied.\n     */\n    public copyFrom(transform: Transform): void {\n        this.position.copyFrom(transform.position);\n        this.rotation.copyFrom(transform.rotation);\n        this.scale.copyFrom(transform.scale);\n    }\n\n    /** Creates and returns a matrix based on this transform. */\n    public getTransformationMatrix(): Matrix4x4 {\n        let translation = Matrix4x4.translation(this.position);\n\n        let rotation = Matrix4x4.rotationXYZ(this.rotation.x, this.rotation.y, this.rotation.z);\n        let scale = Matrix4x4.scale(this.scale);\n\n        // T * R * S\n        return Matrix4x4.multiply(Matrix4x4.multiply(translation, rotation), scale);\n    }\n\n    /**\n     * Sets the values of this transform to the ones provided in the given JSON.\n     * Only values which are overridden need be provided. For example, a position of [0,1,0] \n     * needs only to provide the y value (1) as 0 is the default for x and z.\n     * @param json The JSON to set from.\n     */\n    public setFromJson(json: any): void {\n        if (json.position !== undefined) {\n            this.position.setFromJson(json.position);\n        }\n\n        if (json.rotation !== undefined) {\n            this.rotation.setFromJson(json.rotation);\n        }\n\n        if (json.scale !== undefined) {\n            this.scale.setFromJson(json.scale);\n        }\n    }\n}\n","import { Transform } from \"../math/transform\";\nimport { Matrix4x4 } from \"../math/matrix4x4\";\nimport { Shader } from \"../gl/shader\";\nimport { Scene } from \"./scene\";\nimport { IComponent } from \"../components/IComponent\";\nimport { IBehavior } from \"../behaviors/IBehavior\";\nimport { Vector3 } from \"../math/vector3\";\n\nexport class SimObject {\n    private _id: number;\n    private _children: SimObject[] = [];\n    private _parent: SimObject;\n    private _isLoaded: boolean = false;\n    private _scene: Scene;\n    private _components: IComponent[] = [];\n    private _behaviors: IBehavior[] = [];\n    private _isVisible: boolean = true;\n\n    private _localMatrix: Matrix4x4 = Matrix4x4.identity();\n    private _worldMatrix: Matrix4x4 = Matrix4x4.identity();\n\n\n    public name: string;\n    public transform: Transform = new Transform();\n\n    public constructor(id: number, name: string, scene?: Scene) {\n        this._id = id;\n        this.name = name;\n        this._scene = scene!;\n    }\n\n    public get id(): number {\n        return this._id;\n    }\n\n    public get parent(): SimObject {\n        return this._parent;\n    }\n\n    public get worldMatrix(): Matrix4x4 {\n        return this._worldMatrix;\n    }\n\n    public get isLoaded(): boolean {\n        return this._isLoaded;\n    }\n\n    public get isVisible(): boolean {\n        return this._isVisible;\n    }\n\n    public set isVisible(value: boolean) {\n        this._isVisible = value;\n    }\n\n    public addChild(child: SimObject): void {\n        child._parent = this;\n        this._children.push(child);\n        child.onAdded(this._scene);\n    }\n\n    public removeChaild(child: SimObject): void {\n        const index = this._children.indexOf(child);\n        if (index !== -1) {\n            child._parent = undefined!;\n            this._children.splice(index, 1);\n        }\n    }\n\n    public getComponentByName(name: string): IComponent {\n        for (let component of this._components) {\n            if (component.name === name) {\n                return component;\n            }\n        }\n\n        for (let child of this._children) {\n            const component = this.getComponentByName(name);\n            if (component !== undefined) {\n                return component;\n            }\n        }\n\n        return undefined;\n    }\n\n    public getBehaviorByName(name: string): IBehavior {\n        for (let behavior of this._behaviors) {\n            if (behavior.name === name) {\n                return behavior;\n            }\n        }\n\n        for (let child of this._children) {\n            const behavior = this.getBehaviorByName(name);\n            if (behavior !== undefined) {\n                return behavior;\n            }\n        }\n\n        return undefined;\n    }\n\n    public getObjectByName(name: string): SimObject {\n        if (this.name === name) {\n            return this;\n        }\n\n        for (let child of this._children) {\n            let result = child.getObjectByName(name);\n            if (result !== undefined) {\n                return result;\n            }\n        }\n\n        return undefined!;\n    }\n\n    public addComponent(component: IComponent): void {\n        this._components.push(component);\n\n        component.setOwner(this);\n    }\n\n    public addBehavior(behavior: IBehavior): void {\n        this._behaviors.push(behavior);\n        behavior.setOwner(this);\n    }\n\n    public load(): void {\n        this._isLoaded = true;\n\n        for (let c of this._components) {\n            c.load();\n        }\n\n        for (let child of this._children) {\n            child.load();\n        }\n    }\n\n    updateReady() {\n        for (let c of this._components) {\n            c.updateReady();\n        }\n\n        for (let b of this._behaviors) {\n            b.updateReady();\n        }\n\n        for (let child of this._children) {\n            child.updateReady();\n        }\n    }\n\n    public update(time: number): void {\n\n        // Dont do that on the update MSInputMethodContext.Only when it changes.For now in here\n        this._localMatrix = this.transform.getTransformationMatrix();\n        this.updateWorldMatrix((this.parent !== undefined) ? this.parent.worldMatrix : undefined!);\n\n        for (let c of this._components) {\n            c.update(time);\n        }\n\n        for (let b of this._behaviors) {\n            b.update(time);\n        }\n\n        for (let child of this._children) {\n            child.update(time);\n        }\n    }\n\n    public render(shader: Shader): void {\n\n        if (!this.isVisible) {\n            return;\n        }\n\n        for (let c of this._components) {\n            c.render(shader);\n        }\n\n        for (let child of this._children) {\n            child.render(shader);\n        }\n    }\n\n    public getWorldPosition(): Vector3 {\n        return new Vector3(this._worldMatrix.data[12], this._worldMatrix.data[13], this._worldMatrix.data[14]);\n    }\n\n    protected onAdded(scene: Scene): void {\n        this._scene = scene;\n    }\n\n    private updateWorldMatrix(parentWorldMatrix: Matrix4x4): void {\n        if (parentWorldMatrix !== undefined) {\n            this._worldMatrix = Matrix4x4.multiply(parentWorldMatrix, this._localMatrix);\n        } else {\n            this.worldMatrix.copyFrom(this._localMatrix);\n        }\n\n    }\n}","import { SimObject } from \"./simObject\";\nimport { Shader } from \"../gl/shader\";\n\nexport class Scene {\n    private _root: SimObject;\n\n    public constructor() {\n        this._root = new SimObject(0, '__ROOT__', this);\n    }\n\n    public get root(): SimObject {\n        return this._root;\n    }\n\n    public get isLoaded(): boolean {\n        return this._root.isLoaded;\n    }\n\n    public addObject(object: SimObject): void {\n        this._root.addChild(object);\n    }\n\n    public getObjectByName(name: string): SimObject {\n        return this._root.getObjectByName(name);\n    }\n\n    public load(): void {\n        this._root.load();\n    }\n\n    public update(time: number): void {\n        this._root.update(time);\n    }\n\n    public render(shader: Shader): void {\n        this._root.render(shader);\n    }\n}","import { IComponentBuilder } from './IComponentBuilder';\nimport { IComponent } from './IComponent';\n\nexport class ComponentManager {\n\n    private static _registeredBuilders: { [type: string]: IComponentBuilder } = {};\n\n    public static registerBuilder(builder: IComponentBuilder): void {\n        ComponentManager._registeredBuilders[builder.type] = builder;\n    }\n\n    public static extractComponent(json: any): IComponent {\n\n        let component: IComponent | undefined = undefined;\n\n        if (json.type !== undefined) {\n            if (ComponentManager._registeredBuilders[String(json.type)] !== undefined) {\n                component = ComponentManager._registeredBuilders[String(json.type)].buildFromJson(json);\n            }\n        }\n\n        if (component === undefined) {\n            throw new Error(\"Component manager error - type is missing or builder is not registered for this type.\");\n        }\n\n        return component;\n\n    }\n\n}","import { IBehaviorBuilder } from './IBehaviorBuilder';\nimport { IBehavior } from './IBehavior';\n\nexport class BehaviorManager {\n\n    private static _registeredBuilders: { [type: string]: IBehaviorBuilder } = {};\n\n    public static registerBuilder(builder: IBehaviorBuilder): void {\n        BehaviorManager._registeredBuilders[builder.type] = builder;\n    }\n\n    public static extractBehavior(json: any): IBehavior {\n\n        let behavior: IBehavior | undefined = undefined;\n\n        if (json.type !== undefined) {\n            if (BehaviorManager._registeredBuilders[String(json.type)] !== undefined) {\n                behavior = BehaviorManager._registeredBuilders[String(json.type)].buildFromJson(json);\n            }\n        }\n\n        if (behavior === undefined) {\n            throw new Error(\"Behavior manager error - type is missing or builder is not registered for this type.\");\n        }\n\n        return behavior;\n\n    }\n\n}","import { Scene } from './scene';\nimport { Shader } from '../gl/shader';\nimport { SimObject } from './simObject';\nimport { ComponentManager } from '../components/componentManager';\nimport { BehaviorManager } from '../behaviors/behaviorManager';\n\nexport enum ZoneState {\n    UNINITIALIZED,\n    LOADING,\n    UPDATING\n}\n\nexport class Zone {\n    private _name: string;\n    private _description: string;\n    private _id: number;\n    private _scene: Scene;\n\n    private _state: ZoneState = ZoneState.UNINITIALIZED;\n    private _globalID: number = -1;\n\n    public constructor(id: number, name: string, description: string) {\n        this._id = id;\n        this._name = name;\n        this._description = description;\n        this._scene = new Scene();\n    }\n\n    public get id(): number {\n        return this._id;\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get description(): string {\n        return this._description;\n    }\n\n    public get scene(): Scene {\n        return this._scene;\n    }\n\n    public initialize(zoneData: any): void {\n        if (zoneData.objects === undefined) {\n            throw new Error('Zone initialization error objects not present.');\n        }\n\n        for (const o in zoneData.objects) {\n            const obj = zoneData.objects[o];\n\n            this.loadSimObject(obj, this._scene.root);\n        }\n    }\n\n    public load(): void {\n\n        this._state = ZoneState.LOADING;\n\n        this._scene.load();\n        this._scene.root.updateReady();\n\n        this._state = ZoneState.UPDATING;\n    }\n\n    public unload(): void {\n\n    }\n\n    public update(time: number): void {\n        if (this._state === ZoneState.UPDATING) {\n            this._scene.update(time);\n        }\n    }\n\n    public render(shader: Shader): void {\n        if (this._state === ZoneState.UPDATING) {\n            this._scene.render(shader);\n        }\n    }\n\n    public onActivated(): void {\n\n    }\n\n    public onDeactivated(): void {\n\n    }\n\n    private loadSimObject(dataSection: any, parent: SimObject): void {\n        let name: string = '';\n        if (dataSection.name !== undefined) {\n            name = String(dataSection.name);\n        }\n\n        this._globalID++;\n        const simObject = new SimObject(this._globalID, name, this._scene);\n\n        if (dataSection.transform !== undefined) {\n            simObject.transform.setFromJson(dataSection.transform);\n        }\n\n        if (dataSection.components !== undefined) {\n            for (let c in dataSection.components) {\n                const data = dataSection.components[c];\n                const component = ComponentManager.extractComponent(data);\n                simObject.addComponent(component);\n            }\n        }\n\n        if (dataSection.behaviors !== undefined) {\n            for (let b in dataSection.behaviors) {\n                const data = dataSection.behaviors[b];\n                const behavior = BehaviorManager.extractBehavior(data);\n                simObject.addBehavior(behavior);\n            }\n        }\n\n        if (dataSection.children !== undefined) {\n            for (const i in dataSection.children) {\n                const obj = dataSection.children[i];\n                this.loadSimObject(obj, simObject);\n            }\n        }\n\n        if (parent !== undefined) {\n            parent.addChild(simObject);\n        }\n    }\n}","import { Zone } from \"./zone\";\nimport { Shader } from 'src/gl/shader';\nimport { AssetManager, MESSAGE_ASSET_LOADER_ASSET_LOADED } from \"../assets/assetManager\";\nimport { JsonAsset } from \"../assets/jsonAssetLoader\";\nimport { IMessageHandler } from \"../message/IMessageHandler\";\nimport { Message } from \"../message/message\";\n\nexport class ZoneManager implements IMessageHandler {\n    private static _globalZoneID: number = -1;\n    private static _registeredZones: { [id: number]: string } = {};\n    private static _activeZone: Zone;\n    private static _inst: ZoneManager;\n\n    private constructor() {\n\n    }\n\n    public static initialize(): void {\n\n        ZoneManager._inst = new ZoneManager();\n\n        // Temporary\n        ZoneManager._registeredZones[0] = \"assets/zones/testZone.json\";\n    }\n\n    public static changeZone(id: number): void {\n        if (this._activeZone !== undefined) {\n            ZoneManager._activeZone.onDeactivated();\n            ZoneManager._activeZone.unload();\n            ZoneManager._activeZone = undefined!;\n        }\n\n        if (ZoneManager._registeredZones[id] !== undefined) {\n            if (AssetManager.isAssetLoaded(ZoneManager._registeredZones[id])) {\n                const asset = AssetManager.getAsset(ZoneManager._registeredZones[id]);\n                ZoneManager.loadZone(asset);\n            } else {\n                Message.subscribe(MESSAGE_ASSET_LOADER_ASSET_LOADED + ZoneManager._registeredZones[id], ZoneManager._inst);\n                AssetManager.loadAsset(ZoneManager._registeredZones[id]);\n            }\n        } else {\n            throw new Error(`Zone id: ${id} does not exist`);\n        }\n    }\n\n    public static update(time: number): void {\n        if (ZoneManager._activeZone !== undefined) {\n            ZoneManager._activeZone.update(time);\n        }\n    }\n\n    public static render(shader: Shader): void {\n        if (ZoneManager._activeZone !== undefined) {\n            ZoneManager._activeZone.render(shader);\n        }\n    }\n\n    public onMessage(message: Message): void {\n        if (message.code.indexOf(MESSAGE_ASSET_LOADER_ASSET_LOADED) !== -1) {\n            const asset = message.context as JsonAsset;\n            ZoneManager.loadZone(asset);\n        }\n    }\n\n    private static loadZone(asset: JsonAsset): void {\n        const zoneData = asset.data;\n\n        let zoneId: number;\n        if (zoneData.id === undefined) {\n            throw new Error(`Zone file format exception. Zone ID not present`);\n        } else {\n            zoneId = Number(zoneData.id);\n        }\n\n        let zoneName: string;\n        if (zoneData.name === undefined) {\n            throw new Error(`Zone file format exception. Zone name not present`);\n        } else {\n            zoneName = String(zoneData.name);\n        }\n\n        let zoneDescription: string = '';\n        if (zoneData.description !== undefined) {\n            zoneDescription = String(zoneData.description);\n        }\n\n        ZoneManager._activeZone = new Zone(zoneId, zoneName, zoneDescription);\n        ZoneManager._activeZone.initialize(zoneData);\n        ZoneManager._activeZone.onActivated();\n        ZoneManager._activeZone.load();\n\n        Message.send(\"GAME_READY\", this);\n    }\n}","import { IBehavior } from './IBehavior';\nimport { IBehaviorData } from './IBehaviorData';\nimport { SimObject } from \"../world/simObject\";\n\nexport abstract class BaseBehavior implements IBehavior {\n    public name: string;\n\n    protected _data: IBehaviorData;\n    protected _owner: SimObject;\n\n    public constructor(data: IBehaviorData) {\n        this._data = data;\n        this.name = this._data.name;\n    }\n\n    public setOwner(owner: SimObject): void {\n        this._owner = owner;\n    }\n\n    updateReady() { }\n\n    public update(time: number): void {\n\n    }\n\n    public apply(userData: any): void {\n\n    }\n\n}","\nimport { BaseBehavior } from './baseBehavior';\nimport { IBehaviorData } from './IBehaviorData';\nimport { Vector3 } from '../math/vector3';\nimport { IBehaviorBuilder } from './IBehaviorBuilder';\nimport { IBehavior } from './IBehavior';\n\nexport class RotationBehaviorData implements IBehaviorData {\n\n    public name: string;\n    public rotation: Vector3 = Vector3.zero;\n\n    public setFromJson(json: any): void {\n        if (json.name === undefined) {\n            throw new Error('Name must be defined in behavior data');\n        }\n\n        this.name = String(json.name);\n\n        if (json.rotation !== undefined) {\n            this.rotation.setFromJson(json.rotation);\n        }\n\n    }\n\n}\n\nexport class RotationBehaviorBuilder implements IBehaviorBuilder {\n    public get type(): string {\n        return 'rotation';\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        const data = new RotationBehaviorData();\n        data.setFromJson(json);\n        return new RotationBehavior(data);\n    }\n}\n\nexport class RotationBehavior extends BaseBehavior {\n\n    private rotation: Vector3;\n\n    public constructor(data: RotationBehaviorData) {\n        super(data);\n\n        this.rotation = data.rotation;\n    }\n\n    public update(time: number): void {\n        this._owner.transform.rotation.add(this.rotation);\n\n        super.update(time);\n    }\n}","import { Vector2 } from \"../math/vector2\";\nimport { Message } from \"../message/message\";\n\nexport enum Keys {\n    LEFT = 37,\n    UP = 38,\n    RIGHT = 39,\n    DOWN = 40\n}\n\nexport class MouseContext {\n    public leftDown: boolean;\n    public rightDown: boolean;\n    public position: Vector2;\n\n    public constructor(lefDown: boolean, rightDown: boolean, position: Vector2) {\n        this.leftDown = lefDown;\n        this.rightDown = rightDown;\n        this.position = position;\n    }\n}\n\nexport class InputManager {\n    private static _keys: boolean[] = [];\n    private static _mouseX: number;\n    private static _mouseY: number;\n    private static _previousMouseX: number;\n    private static _previousMouseY: number;\n    private static _letfDown: boolean = false;\n    private static _rightDown: boolean = false;\n    private static _resolutionScale: Vector2 = Vector2.one;\n\n    public static initialize(viewport: HTMLCanvasElement): void {\n        for (let i = 0; i < 255; i++) {\n            InputManager._keys[i] = false;\n        }\n\n        window.addEventListener('keydown', InputManager.onKeyDown);\n        window.addEventListener('keyup', InputManager.onKeyUp);\n\n        viewport.addEventListener('mousemove', InputManager.onMouseMove);\n        viewport.addEventListener('mousedown', InputManager.onMouseDown);\n        viewport.addEventListener('mouseup', InputManager.onMouseUp);\n    }\n\n    public static isKeyDown(key: Keys): boolean {\n        return InputManager._keys[key];\n    }\n\n    public static getMousePosition(): Vector2 {\n        return new Vector2(this._mouseX, this._mouseY);\n    }\n\n    public static setResolutionScale(scale: Vector2) {\n        InputManager._resolutionScale.copyFrom(scale);\n    }\n\n    private static onKeyDown(event: KeyboardEvent): boolean {\n        InputManager._keys[event.keyCode] = true;\n        return true;\n    }\n\n    private static onKeyUp(event: KeyboardEvent): boolean {\n        InputManager._keys[event.keyCode] = false;\n        return true;\n    }\n\n    private static onMouseMove(event: MouseEvent): void {\n        InputManager._previousMouseX = InputManager._mouseX;\n        InputManager._previousMouseY = InputManager._mouseY;\n\n        let rect = (event.target as HTMLElement).getBoundingClientRect();\n        InputManager._mouseX = (event.clientX - Math.round(rect.left)) * (1 / InputManager._resolutionScale.x);\n        InputManager._mouseY = (event.clientY - Math.round(rect.top)) * (1 / InputManager._resolutionScale.y);\n    }\n\n    private static onMouseDown(event: MouseEvent): void {\n        if (event.button === 0) {\n            this._letfDown = true;\n        } else if (event.button == 2) {\n            this._rightDown = true;\n        }\n\n        Message.send('MOUSE_DOWN', this, new MouseContext(InputManager._letfDown, InputManager._rightDown, InputManager.getMousePosition()));\n    }\n\n    private static onMouseUp(event: MouseEvent): void {\n        if (event.button === 0) {\n            this._letfDown = false;\n        } else if (event.button == 2) {\n            this._rightDown = false;\n        }\n\n        Message.send('MOUSE_UP', this, new MouseContext(InputManager._letfDown, InputManager._rightDown, InputManager.getMousePosition()));\n    }\n}","\nimport { BaseBehavior } from './baseBehavior';\nimport { IBehaviorData } from './IBehaviorData';\nimport { IBehaviorBuilder } from './IBehaviorBuilder';\nimport { IBehavior } from './IBehavior';\nimport { InputManager } from '../input/inputManager';\nimport { Keys } from '../input/inputManager';\n\nexport class KeyboardMovementBehaviorData implements IBehaviorData {\n\n    public name: string;\n    public speed: number = 0.1;\n\n    public setFromJson(json: any): void {\n        if (json.name === undefined) {\n            throw new Error('Name must be defined in behavior data');\n        }\n\n        this.name = String(json.name);\n\n        if (json.speed !== undefined) {\n            this.speed = Number(json.speed);\n        }\n    }\n\n}\n\nexport class KeyboardMovementBehaviorBuilder implements IBehaviorBuilder {\n    public get type(): string {\n        return 'keyboardMovement';\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        const data = new KeyboardMovementBehaviorData();\n        data.setFromJson(json);\n        return new KeyboardMovementBehavior(data);\n    }\n}\n\nexport class KeyboardMovementBehavior extends BaseBehavior {\n\n    public speed: number = 0.1;\n\n    public constructor(data: KeyboardMovementBehaviorData) {\n        super(data);\n\n        this.speed = data.speed;\n    }\n\n    public update(time: number): void {\n        if (InputManager.isKeyDown(Keys.LEFT)) {\n            this._owner.transform.position.x -= this.speed;\n        }\n\n        if (InputManager.isKeyDown(Keys.RIGHT)) {\n            this._owner.transform.position.x += this.speed;\n        }\n\n        if (InputManager.isKeyDown(Keys.UP)) {\n            this._owner.transform.position.y -= this.speed;\n        }\n\n        if (InputManager.isKeyDown(Keys.DOWN)) {\n            this._owner.transform.position.y += this.speed;\n        }\n\n        super.update(time);\n    }\n}","export class SoundEffect {\n\n    public assetPath: string;\n\n    private _player: HTMLAudioElement;\n\n    constructor(assetPath: string, loop: boolean) {\n        this._player = new Audio(assetPath);\n        this.loop = loop;\n    }\n\n    public get loop(): boolean {\n        return this._player.loop;\n    }\n\n    public set loop(value: boolean) {\n        this._player.loop = value;\n    }\n\n    public destroy() {\n        this._player = undefined as unknown as HTMLAudioElement;\n    }\n\n    public play() {\n        if (!this._player.paused) {\n            this.stop();\n        }\n        this._player.play();\n    }\n\n    public pause() {\n        this._player.pause();\n    }\n\n    public stop() {\n        this._player.pause()\n        this._player.currentTime = 0;\n    }\n\n}\n\nexport class AudioManager {\n\n    private static _soundEffects: { [name: string]: SoundEffect } = {};\n\n    public static loadSoundFile(name: string, assetPath: string, loop: boolean): void {\n        AudioManager._soundEffects[name] = new SoundEffect(assetPath, loop);\n    }\n\n    public static playSound(name: string) {\n        if (this._soundEffects[name] !== undefined) {\n            this._soundEffects[name].play();\n        }\n    }\n\n    public static stopSound(name: string) {\n        if (this._soundEffects[name] !== undefined) {\n            this._soundEffects[name].stop();\n        }\n    }\n\n    public static stopAll(name: string) {\n        for (let sfx in AudioManager._soundEffects) {\n            this._soundEffects[sfx].stop();\n        }\n    }\n\n    public static pauseSound(name: string) {\n        if (this._soundEffects[name] !== undefined) {\n            this._soundEffects[name].pause();\n        }\n    }\n\n    public static pauseAll(name: string) {\n        for (let sfx in AudioManager._soundEffects) {\n            this._soundEffects[sfx].pause();\n        }\n    }\n}","import { IShape2D } from \"./IShape2D\";\nimport { Vector2 } from \"../../math/vector2\";\nimport { Rectangle2D } from \"./rectangle2D\";\n\nexport class Circle2D implements IShape2D {\n\n    public position: Vector2 = Vector2.zero;\n    public origin: Vector2 = Vector2.zero;\n    public radius: number;\n\n    public get offset(): Vector2 {\n        return new Vector2(this.radius + (this.radius * this.origin.x), this.radius + (this.radius * this.origin.y));\n    }\n\n    public setFromJson(json: any) {\n        if (json.position !== undefined) {\n            this.position.setFromJson(json.position);\n        }\n\n        if (json.offset !== undefined) {\n            this.offset.setFromJson(json.offset);\n        }\n\n        if (json.radius === undefined) {\n            throw new Error(\"Rectangle2D requires radius to be present.\");\n        }\n\n        this.radius = Number(json.radius);\n    }\n\n    public intersects(other: IShape2D): boolean {\n\n        if (other instanceof Circle2D) {\n            let distance = Math.abs(Vector2.distance(other.position, this.position));\n            let radiusLengths = this.radius + other.radius;\n            if (distance <= radiusLengths) {\n                return true;\n            }\n        }\n\n        if (other instanceof Rectangle2D) {\n            let deltaX = this.position.x - Math.max(other.position.x, Math.min(this.position.x, other.position.x + other.width));\n            let deltaY = this.position.y - Math.max(other.position.y, Math.min(this.position.y, other.position.y + other.height));\n            if ((deltaX * deltaX + deltaY * deltaY) < (this.radius * this.radius)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public pointInShape(point: Vector2): boolean {\n        const absDistance = Math.abs(Vector2.distance(this.position, point));\n        if (absDistance <= this.radius) {\n            return true;\n        }\n        return false;\n    }\n\n}","import { IShape2D } from \"./IShape2D\";\nimport { Vector2 } from \"../../math/vector2\";\nimport { Circle2D } from \"./circle2D\";\n\nexport class Rectangle2D implements IShape2D {\n\n    public position: Vector2 = Vector2.zero;\n    public origin: Vector2 = Vector2.zero;\n\n    public width: number;\n    public height: number;\n\n    public constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.position.x = x;\n        this.position.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    public get offset(): Vector2 {\n        return new Vector2((this.width * this.origin.x), (this.height * this.origin.y));\n    }\n\n    public setFromJson(json: any) {\n        if (json.position !== undefined) {\n            this.position.setFromJson(json.position);\n        }\n\n        if (json.offset !== undefined) {\n            this.offset.setFromJson(json.offset);\n        }\n\n        if (json.width === undefined) {\n            throw new Error(\"Rectangle2D requires width to be present.\");\n        }\n\n        this.width = Number(json.width);\n\n        if (json.height === undefined) {\n            throw new Error(\"Rectangle2D requires height to be present.\");\n        }\n\n        this.height = Number(json.height);\n    }\n\n    // TODO: Add support to rotated shapes\n    public intersects(other: IShape2D): boolean {\n        if (other instanceof Rectangle2D) {\n            let a = this.getExtents(this);\n            let b = this.getExtents(other);\n\n            return (a.position.x <= b.width && a.width >= b.position.x) && (a.position.y <= b.height && a.height >= b.position.y);\n        }\n\n        if (other instanceof Circle2D) {\n            let deltaX = other.position.x - Math.max(this.position.x, Math.min(other.position.x, this.position.x + this.width));\n            let deltaY = other.position.y - Math.max(this.position.y, Math.min(other.position.y, this.position.y + this.height));\n            if ((deltaX * deltaX + deltaY * deltaY) < (other.radius * other.radius)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public pointInShape(point: Vector2): boolean {\n\n        let x = this.width < 0 ? this.position.x - this.width : this.position.x;\n        let y = this.height < 0 ? this.position.y - this.height : this.position.y;\n\n        let extentX = this.width < 0 ? this.position.x : this.position.x + this.width;\n        let extentY = this.height < 0 ? this.position.y : this.position.y + this.height;\n\n        if (point.x >= x && point.x <= extentX && point.y >= y && point.y <= extentY) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private getExtents(shape: Rectangle2D): Rectangle2D {\n        let x = shape.width < 0 ? shape.position.x - shape.width : shape.position.x;\n        let y = shape.height < 0 ? shape.position.y - shape.height : shape.position.y;\n\n        let extentX = shape.width < 0 ? shape.position.x : shape.position.x + shape.width;\n        let extentY = shape.height < 0 ? shape.position.y : shape.position.y + shape.height;\n\n        return new Rectangle2D(x, y, extentX, extentY);\n    }\n\n\n}","import { CollisionComponent } from \"../components/collisionComponent\";\nimport { Message } from \"../message/message\";\n\nexport class CollisionData {\n    public a: CollisionComponent;\n    public b: CollisionComponent;\n    public time: number;\n\n    public constructor(time: number, a: CollisionComponent, b: CollisionComponent) {\n        this.time = time;\n        this.a = a;\n        this.b = b;\n    }\n\n}\n\nexport class CollisionManager {\n\n    private static _totalTime: number = 0;\n    private static _components: CollisionComponent[] = [];\n    private static _collisionData: CollisionData[] = [];\n    private constructor() {\n\n    }\n\n    public static registerCollisionComponent(component: CollisionComponent) {\n        CollisionManager._components.push(component);\n    }\n\n    public static unRegisterCollisionComponent(component: CollisionComponent) {\n        const index = CollisionManager._components.indexOf(component);\n        if (index !== -1) {\n            CollisionManager._components.slice(index, 1);\n        }\n    }\n\n    public static clear() {\n        CollisionManager._components.length = 0;\n    }\n\n    public static update(time: number) {\n\n        CollisionManager._totalTime += time;\n\n        // TODO: do this properly. Whole function!\n        for (let c = 0; c < CollisionManager._components.length; ++c) {\n            let comp = CollisionManager._components[c];\n            for (let o = 0; o < CollisionManager._components.length; ++o) {\n                let other = CollisionManager._components[o];\n                // Do not check collisions with self\n                if (comp === other) {\n                    continue;\n                }\n\n                // if both shapes are static stop detection\n                if (comp.isStatic && other.isStatic) {\n                    continue;\n                }\n\n                if (comp.shape.intersects(other.shape)) {\n                    // There is a collision\n                    let exists: boolean = false;\n                    for (let d = 0; d < CollisionManager._collisionData.length; ++d) {\n                        let data = CollisionManager._collisionData[d];\n\n                        if ((data.a === comp && data.b === other) || (data.a === other && data.b === comp)) {\n                            // We have existing data, update it\n                            // onCollisionUpdate\n                            comp.onCollisionUpdate(other);\n                            other.onCollisionUpdate(comp);\n                            data.time = CollisionManager._totalTime;\n                            exists = true;\n                            break;\n                        }\n                    }\n\n                    if (!exists) {\n                        // Create a new collision\n                        // onCollisionEntry\n                        const col = new CollisionData(CollisionManager._totalTime, comp, other);\n                        comp.onCollisionEntry(other);\n                        other.onCollisionEntry(comp);\n                        Message.sendPriority(`COLLISION_ENTRY`, undefined, col);\n                        this._collisionData.push(col);\n                    }\n                }\n            }\n        }\n\n        // Collision that not longer exist\n        const removeData: CollisionData[] = [];\n        for (let d = 0; d < CollisionManager._collisionData.length; ++d) {\n            const data = CollisionManager._collisionData[d];\n            if (data.time !== CollisionManager._totalTime) {\n                // onCollisionExit\n                removeData.push(data);\n            }\n        }\n\n        while (removeData.length !== 0) {\n            const data = removeData.shift();\n            const index = CollisionManager._collisionData.indexOf(data);\n            CollisionManager._collisionData.splice(index, 1);\n\n            data.a.onCollisionExit(data.b);\n            data.b.onCollisionExit(data.a);\n\n            Message.sendPriority(`COLLISION_EXIT`, undefined, data);\n        }\n    }\n\n}","import { Shader } from '../gl/shader';\nimport { BaseComponent } from \"./baseComponent\";\nimport { IComponent } from \"./IComponent\";\nimport { IComponentData } from './IComponentData';\nimport { IComponentBuilder } from './IComponentBuilder';\nimport { IShape2D } from '../graphics/shapes2D/IShape2D';\nimport { Rectangle2D } from '../graphics/shapes2D/rectangle2D';\nimport { Circle2D } from '../graphics/shapes2D/circle2D';\nimport { CollisionManager } from '../collision/CollisionManager';\n\nexport class CollisionComponentData implements IComponentData {\n    public name: string;\n    public shape: IShape2D;\n    public static: boolean = true;\n\n    public setFromJson(json: any): void {\n        if (json.name !== undefined) {\n            this.name = String(json.name);\n        }\n\n        if (json.static !== undefined) {\n            this.static = Boolean(json.static);\n        }\n\n        if (json.shape === undefined) {\n            throw new Error('CollisionComponentData requires shape to be present.');\n        }\n\n        if (json.shape.type === undefined) {\n            throw new Error('CollisionComponentData requires shape.type to be present.');\n        }\n\n        const shapeType = String(json.shape.type).toLowerCase();\n\n        switch (shapeType) {\n            case 'rectangle':\n                this.shape = new Rectangle2D();\n                break;\n\n            case 'circle':\n                this.shape = new Circle2D();\n                break;\n\n            default:\n                throw new Error('Unssuported shape type ' + shapeType);\n                break;\n        }\n\n        this.shape.setFromJson(json.shape);\n    }\n}\n\nexport class CollisionComponentBuilder implements IComponentBuilder {\n\n    public get type(): string {\n        return 'collision';\n    }\n\n    public buildFromJson(json: any): IComponent {\n        const data = new CollisionComponentData();\n        data.setFromJson(json);\n        return new CollisionComponent(data);\n    }\n\n}\n\nexport class CollisionComponent extends BaseComponent {\n\n    private _shape: IShape2D;\n    private _static: boolean;\n\n    public constructor(data: CollisionComponentData) {\n        super(data);\n\n        this._shape = data.shape;\n        this._static = data.static;\n    }\n\n    public get shape(): IShape2D {\n        return this._shape;\n    }\n\n    public get isStatic(): boolean {\n        return this._static;\n    }\n\n    public load() {\n        super.load();\n\n        // TODO: Update this to handle nested objects. Get world position\n        this._shape.position.copyFrom(this._owner.getWorldPosition().toVector2().subtract(this._shape.offset));\n\n        // Tell the collision manager we exists\n        CollisionManager.registerCollisionComponent(this);\n    }\n\n    public update(time: number) {\n        // TODO: Update this to handle nested objects. Get world position\n        this._shape.position.copyFrom(this._owner.getWorldPosition().toVector2().subtract(this._shape.offset));\n\n        super.update(time);\n    }\n\n    public render(shader: Shader): void {\n        // this._shape.draw(shader, this.owner.worldMatrix); \n        super.render(shader);\n    }\n\n    public onCollisionEntry(other: CollisionComponent) {\n        console.log('onCollisionEntry ', this, other);\n    }\n\n    public onCollisionUpdate(other: CollisionComponent) {\n        // console.log('onCollisionUpdate ', this, other);\n    }\n\n    public onCollisionExit(other: CollisionComponent) {\n        console.log('onCollisionExit ', this, other);\n    }\n}","\nexport class MathExt {\n\n    public static clamp(value: number, min: number, max: number): number {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    }\n\n    public static degToRad(degrees: number): number {\n        return degrees * Math.PI / 180.0;\n    }\n\n    public static radToDeg(radians: number): number {\n        return radians * 180.0 / Math.PI;\n    }\n\n}","import { BaseBehavior } from './baseBehavior';\nimport { IBehaviorData } from './IBehaviorData';\nimport { IBehaviorBuilder } from './IBehaviorBuilder';\nimport { IBehavior } from './IBehavior';\nimport { Vector2 } from '../math/vector2';\nimport { AnimatedSpriteComponent } from '../components/animatedSpriteComponent';\nimport { IMessageHandler } from '../message/IMessageHandler';\nimport { Message } from '../message/message';\nimport { AudioManager } from '../audio/audioManager';\nimport { CollisionData } from '../collision/CollisionManager';\nimport { MathExt } from '../math/mathExtensions';\nimport { Vector3 } from '../math/vector3';\n\nexport class PlayerBehaviorData implements IBehaviorData {\n\n    public name: string;\n    public acceleration: Vector2 = new Vector2(0, 920);\n    public playerCollisionComponent: string;\n    public groundCollisionComponent: string;\n    public animatedSpriteName: string;\n    public scoreCollisionComponent: string;\n\n    public setFromJson(json: any): void {\n        if (json.name === undefined) {\n            throw new Error('Name must be defined in behavior data');\n        }\n\n        this.name = String(json.name);\n\n        if (json.acceleration !== undefined) {\n            this.acceleration.setFromJson(json.acceleration);\n        }\n\n        if (json.animatedSpriteName === undefined) {\n            throw new Error('animatedSpriteName must be defined in behavior data');\n        } else {\n            this.animatedSpriteName = String(json.animatedSpriteName);\n        }\n\n        if (json.playerCollisionComponent === undefined) {\n            throw new Error('playerCollisionComponent must be defined in behavior data');\n        } else {\n            this.playerCollisionComponent = String(json.playerCollisionComponent);\n        }\n\n        if (json.groundCollisionComponent === undefined) {\n            throw new Error('groundCollisionComponent must be defined in behavior data');\n        } else {\n            this.groundCollisionComponent = String(json.groundCollisionComponent);\n        }\n\n        if (json.scoreCollisionComponent === undefined) {\n            throw new Error('scoreCollisionComponent must be defined in behavior data');\n        } else {\n            this.scoreCollisionComponent = String(json.scoreCollisionComponent);\n        }\n    }\n\n}\n\nexport class PlayerBehaviorBuilder implements IBehaviorBuilder {\n    public get type(): string {\n        return 'player';\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        const data = new PlayerBehaviorData();\n        data.setFromJson(json);\n        return new PlayerBehavior(data);\n    }\n}\n\nexport class PlayerBehavior extends BaseBehavior implements IMessageHandler {\n\n    private _acceleration: Vector2;\n    private _velocity: Vector2 = Vector2.zero;\n    private _isAlive: boolean = true;\n    private _playerCollisionComponent: string;\n    private _groundCollisionComponent: string;\n    private _scoreCollisionComponent: string;\n    private _animatedSpriteName: string;\n    private _isPlaying: boolean = false;\n    private _initialPosition: Vector3 = Vector3.zero;\n    private _score: number = 0;\n    private _highScore: number = 0;\n\n    private _sprite: AnimatedSpriteComponent;\n\n    // TODO: move this to configuration.\n    private _pipeNames: string[] = [\"pipe1Collision_end\", \"pipe1Collision_middle_top\", \"pipe1Collision_endneg\", \"pipe1Collision_middle_bottom\"];\n\n    public constructor(data: PlayerBehaviorData) {\n        super(data);\n\n        this._acceleration = data.acceleration;\n        this._playerCollisionComponent = data.playerCollisionComponent;\n        this._groundCollisionComponent = data.groundCollisionComponent;\n        this._scoreCollisionComponent = data.scoreCollisionComponent;\n        this._animatedSpriteName = data.animatedSpriteName;\n\n        Message.subscribe(\"MOUSE_DOWN\", this);\n        Message.subscribe(\"COLLISION_ENTRY\", this);\n\n        Message.subscribe(\"GAME_READY\", this);\n        Message.subscribe(\"GAME_RESET\", this);\n        Message.subscribe(\"GAME_START\", this);\n\n        Message.subscribe(\"PLAYER_DIED\", this);\n    }\n\n    public updateReady() {\n        super.updateReady();\n\n        // Get a reference to the animated sprite\n        this._sprite = this._owner.getComponentByName(this._animatedSpriteName) as AnimatedSpriteComponent;\n        if (this._sprite === undefined) {\n            throw new Error(`AnimatedSpriteComponent named ${this._animatedSpriteName} is not attaached to the owner of this component`);\n        }\n\n        // Make sure the animation plays right away.\n        this._sprite.setFrame(0);\n\n        this._initialPosition.copyFrom(this._owner.transform.position);\n    }\n\n    public update(time: number): void {\n\n        const seconds: number = time / 1000;\n\n        if (this._isPlaying) {\n            this._velocity.add(this._acceleration.clone().scale(seconds));\n        }\n\n        // Limit velocity\n        if (this._velocity.y > 400) {\n            this._velocity.y = 400;\n        }\n\n        // Prevent Flying too high\n        if (this._owner.transform.position.y < -13) {\n            this._owner.transform.position.y = -13;\n            this._velocity.y = 0;\n        }\n\n        this._owner.transform.position.add(this._velocity.clone().scale(seconds).toVector3());\n\n        if (this._velocity.y < 0) {\n            this._owner.transform.rotation.z -= MathExt.degToRad(600.0) * seconds;\n\n            if (this._owner.transform.rotation.z < MathExt.degToRad(-20)) {\n                this._owner.transform.rotation.z = MathExt.degToRad(-20);\n            }\n        }\n\n        if (this.isFalling() || !this._isAlive) {\n            this._owner.transform.rotation.z += MathExt.degToRad(480.0) * seconds;\n            if (this._owner.transform.rotation.z > MathExt.degToRad(90)) {\n                this._owner.transform.rotation.z = MathExt.degToRad(90);\n            }\n        }\n\n        if (this.shouldNotFlap()) {\n            this._sprite.stop();\n        } else if (!this._sprite.isPlaying) {\n            this._sprite.play();\n        }\n\n        super.update(time);\n    }\n\n    public onMessage(message: Message): void {\n        switch (message.code) {\n            case \"MOUSE_DOWN\":\n                this.onFlap();\n                break;\n\n            case \"COLLISION_ENTRY\":\n                let data: CollisionData = message.context as CollisionData;\n                if (data.a.name !== this._playerCollisionComponent && data.b.name !== this._playerCollisionComponent) {\n                    return;\n                }\n                if (data.a.name === this._groundCollisionComponent || data.b.name === this._groundCollisionComponent) {\n                    this.die();\n                    this.decelerate();\n                } else if (this._pipeNames.indexOf(data.a.name) !== -1 || this._pipeNames.indexOf(data.b.name) !== -1) {\n                    this.die();\n                } else if (data.a.name === this._scoreCollisionComponent || data.b.name === this._scoreCollisionComponent) {\n                    if (this._isAlive && this._isPlaying) {\n                        this.setScore(this._score + 1);\n                        AudioManager.playSound(\"ting\");\n                    }\n                }\n                break;\n\n            // Shows the tutorial, click to GAME_START\n            case \"GAME_RESET\":\n                Message.send(\"GAME_HIDE\", this);\n                Message.send(\"RESET_HIDE\", this);\n                Message.send(\"SPLASH_HIDE\", this);\n                Message.send(\"TUTORIAL_SHOW\", this);\n                this.reset();\n                break;\n\n            // Starts the main game.\n            case \"GAME_START\":\n                Message.send(\"GAME_SHOW\", this);\n                Message.send(\"RESET_HIDE\", this);\n                Message.send(\"SPLASH_HIDE\", this);\n                Message.send(\"TUTORIAL_HIDE\", this);\n                this._isPlaying = true;\n                this._isAlive = true;\n                this.start();\n                break;\n\n            // Zone is loaded, show play button/splash screen\n            case \"GAME_READY\":\n                Message.send(\"RESET_HIDE\", this);\n                Message.send(\"TUTORIAL_HIDE\", this);\n                Message.send(\"GAME_HIDE\", this);\n                Message.send(\"SPLASH_SHOW\", this);\n                break;\n\n            // Show score and restart button\n            case \"PLAYER_DIED\":\n                Message.send(\"RESET_SHOW\", this);\n                break;\n        }\n    }\n\n    private isFalling(): boolean {\n        return this._velocity.y > 220.0;\n    }\n\n    private shouldNotFlap(): boolean {\n        return !this._isPlaying || this._velocity.y > 220.0 || !this._isAlive;\n    }\n\n    private die() {\n        if (this._isPlaying && this._isAlive) {\n            this._isAlive = false;\n            AudioManager.playSound('dead');\n            Message.send(\"PLAYER_DIED\", this);\n        }\n    }\n\n    private reset(): void {\n        this._isAlive = true;\n        this._isPlaying = false;\n        this._sprite.owner.transform.position.copyFrom(this._initialPosition);\n        this._sprite.owner.transform.rotation.z = 0;\n        this.setScore(0);\n\n        this._velocity.set(0, 0);\n        this._acceleration.set(0, 920);\n        this._sprite.play();\n    }\n\n    private start(): void {\n        this._isPlaying = true;\n        Message.send(\"PLAYER_RESET\", this);\n    }\n\n    private decelerate() {\n        this._acceleration.y = 0;\n        this._velocity.y = 0;\n    }\n\n    private onFlap() {\n        if (this._isAlive && this._isPlaying) {\n            this._velocity.y = -280;\n            AudioManager.playSound('flap');\n        }\n    }\n\n    private setScore(score: number): void {\n        this._score = score;\n        Message.send(\"counterText:SetText\", this, this._score);\n        Message.send(\"scoreText:SetText\", this, this._score);\n\n        if (this._score > this._highScore) {\n            this._highScore = this._score;\n            Message.send(\"bestText:SetText\", this, this._highScore);\n        }\n    }\n}","﻿import { Vector2 } from \"../math/vector2\";\nimport { IBehaviorData } from \"./IBehaviorData\";\nimport { IBehaviorBuilder } from \"./IBehaviorBuilder\";\nimport { IBehavior } from \"./IBehavior\";\nimport { BaseBehavior } from \"./baseBehavior\";\nimport { IMessageHandler } from \"../message/IMessageHandler\";\nimport { Message } from \"../message/message\";\n\nexport class ScrollBehaviorData implements IBehaviorData {\n    public name: string;\n    public velocity: Vector2 = Vector2.zero;\n    public minPosition: Vector2 = Vector2.zero;\n    public resetPosition: Vector2 = Vector2.zero;\n    public minResetY: number;\n    public maxResetY: number;\n    public startMessage: string;\n    public stopMessage: string;\n    public resetMessage: string;\n\n    public setFromJson(json: any): void {\n        if (json.name === undefined) {\n            throw new Error(\"Name must be defined in behavior data.\");\n        }\n\n        this.name = String(json.name);\n\n        if (json.startMessage !== undefined) {\n            this.startMessage = String(json.startMessage);\n        }\n\n        if (json.stopMessage !== undefined) {\n            this.stopMessage = String(json.stopMessage);\n        }\n\n        if (json.resetMessage !== undefined) {\n            this.resetMessage = String(json.resetMessage);\n        }\n\n        if (json.velocity !== undefined) {\n            this.velocity.setFromJson(json.velocity);\n        } else {\n            throw new Error(\"ScrollBehaviorData requires property 'velocity' to be defined!\");\n        }\n\n        if (json.minPosition !== undefined) {\n            this.minPosition.setFromJson(json.minPosition);\n        } else {\n            throw new Error(\"ScrollBehaviorData requires property 'minPosition' to be defined!\");\n        }\n\n        if (json.resetPosition !== undefined) {\n            this.resetPosition.setFromJson(json.resetPosition);\n        } else {\n            throw new Error(\"ScrollBehaviorData requires property 'resetPosition' to be defined!\");\n        }\n\n        if (json.minResetY !== undefined) {\n            this.minResetY = Number(json.minResetY);\n        }\n\n        if (json.maxResetY !== undefined) {\n            this.maxResetY = Number(json.maxResetY);\n        }\n    }\n}\n\nexport class ScrollBehaviorBuilder implements IBehaviorBuilder {\n    public get type(): string {\n        return \"scroll\";\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        let data = new ScrollBehaviorData();\n        data.setFromJson(json);\n        return new ScrollBehavior(data);\n    }\n}\n\nexport class ScrollBehavior extends BaseBehavior implements IMessageHandler {\n    private _velocity: Vector2 = Vector2.zero;\n    private _minPosition: Vector2 = Vector2.zero;\n    private _resetPosition: Vector2 = Vector2.zero;\n    private _minResetY: number;\n    private _maxResetY: number;\n    private _startMessage: string;\n    private _stopMessage: string;\n    private _resetMessage: string;\n    private _isScrolling: boolean = false;\n    private _initialPosition: Vector2 = Vector2.zero;\n\n    public constructor(data: ScrollBehaviorData) {\n        super(data);\n\n        this._velocity.copyFrom(data.velocity);\n        this._minPosition.copyFrom(data.minPosition);\n        this._resetPosition.copyFrom(data.resetPosition);\n        this._startMessage = data.startMessage;\n        this._stopMessage = data.stopMessage;\n        this._resetMessage = data.resetMessage;\n\n        if (data.minResetY !== undefined) {\n            this._minResetY = data.minResetY;\n        }\n\n        if (data.maxResetY !== undefined) {\n            this._maxResetY = data.maxResetY;\n        }\n    }\n\n    public updateReady(): void {\n        super.updateReady();\n\n        if (this._startMessage !== undefined) {\n            Message.subscribe(this._startMessage, this);\n        }\n\n        if (this._stopMessage !== undefined) {\n            Message.subscribe(this._stopMessage, this);\n        }\n\n        if (this._resetMessage !== undefined) {\n            Message.subscribe(this._resetMessage, this);\n        }\n\n        this._initialPosition.copyFrom(this._owner.transform.position.toVector2());\n    }\n\n    public update(time: number): void {\n        if (this._isScrolling) {\n            this._owner.transform.position.add(this._velocity.clone().scale(time / 1000).toVector3());\n\n            const scrollY = this._minResetY !== undefined && this._maxResetY !== undefined;\n            if (this._owner.transform.position.x <= this._minPosition.x &&\n                (scrollY || (!scrollY && this._owner.transform.position.y <= this._minPosition.y))) {\n                this.reset();\n            }\n        }\n    }\n\n    public onMessage(message: Message): void {\n        if (message.code === this._startMessage) {\n            this._isScrolling = true;\n        } else if (message.code === this._stopMessage) {\n            this._isScrolling = false;\n        } else if (message.code === this._resetMessage) {\n            this.initial();\n        }\n    }\n\n    private reset(): void {\n        if (this._minResetY !== undefined && this._maxResetY !== undefined) {\n            this._owner.transform.position.set(this._resetPosition.x, this.getRandomY());\n        } else {\n            this._owner.transform.position.copyFrom(this._resetPosition.toVector3());\n        }\n    }\n\n    private getRandomY(): number {\n        // Inclusive of the min and max set in the data.\n        return Math.floor(Math.random() * (this._maxResetY - this._minResetY + 1)) + this._minResetY;\n    }\n\n    private initial(): void {\n        this._owner.transform.position.copyFrom(this._initialPosition.toVector3());\n    }\n}\n","﻿import { IMessageHandler } from \"../message/IMessageHandler\";\nimport { AssetManager, MESSAGE_ASSET_LOADER_ASSET_LOADED } from \"../assets/assetManager\";\nimport { Message } from \"../message/message\";\nimport { TextAsset } from \"../assets/TextAssetLoader\";\nimport { Vector2 } from \"../math/vector2\";\n\nclass FontUtilities {\n\n    public static extractFieldValue(field: string): string {\n        return field.split(\"=\")[1];\n    }\n}\n\n/**\n * A single font glyph used for a bitmap font.\n */\nexport class FontGlyph {\n\n    /** The character identifier. */\n    public id: number;\n\n    /** The x position within the bitmap. */\n    public x: number;\n\n    /** The y position within the bitmap. */\n    public y: number;\n\n    /** The width of the glyph within the bitmap. */\n    public width: number;\n\n    /** The height of the glyph within the bitmap. */\n    public height: number;\n\n    /** The x offset amount. */\n    public xOffset: number;\n\n    /** The y offset amount. */\n    public yOffset: number;\n\n    /** The amount to advance after this character. */\n    public xAdvance: number;\n\n    /** The page/texture id. */\n    public page: number;\n\n    /** The channel id. */\n    public channel: number;\n\n    /**\n     * Extracts a glyph from the provided fields.\n     * @param fields The fields to extract from.\n     */\n    public static fromFields(fields: string[]): FontGlyph {\n        let glyph: FontGlyph = new FontGlyph();\n\n        glyph.id = Number(FontUtilities.extractFieldValue(fields[1]));\n        glyph.x = Number(FontUtilities.extractFieldValue(fields[2]));\n        glyph.y = Number(FontUtilities.extractFieldValue(fields[3]));\n        glyph.width = Number(FontUtilities.extractFieldValue(fields[4]));\n        glyph.height = Number(FontUtilities.extractFieldValue(fields[5]));\n        glyph.xOffset = Number(FontUtilities.extractFieldValue(fields[6]));\n        glyph.yOffset = Number(FontUtilities.extractFieldValue(fields[7]));\n        glyph.xAdvance = Number(FontUtilities.extractFieldValue(fields[8]));\n        glyph.page = Number(FontUtilities.extractFieldValue(fields[9]));\n        glyph.channel = Number(FontUtilities.extractFieldValue(fields[10]));\n\n        return glyph;\n    }\n}\n\n/**\n * A composition of configuration and images which allows text to be drawn to the screen.\n */\nexport class BitmapFont implements IMessageHandler {\n\n    private _name: string;\n    private _fontFileName: string;\n    private _assetLoaded: boolean = false;\n    private _imageFile: string;\n    private _glyphs: { [id: number]: FontGlyph } = {};\n    private _size: number;\n    private _imageWidth: number;\n    private _imageHeight: number;\n\n    /**\n     * Creates a new bitmap font.\n     * @param name The name of the font.\n     * @param fontFile The font info file.\n     */\n    public constructor(name: string, fontFile: string) {\n        this._name = name;\n        this._fontFileName = fontFile;\n    }\n\n    /** The name of the font. */\n    public get name(): string {\n        return this._name;\n    }\n\n    /** The size of this font. */\n    public get size(): number {\n        return this._size;\n    }\n\n    /** The width of the image used for this font. */\n    public get imageWidth(): number {\n        return this._imageWidth;\n    }\n\n    /** The height of the image used for this font. */\n    public get imageHeight(): number {\n        return this._imageHeight;\n    }\n\n    /** The name of the texture image used for this font. */\n    public get textureName(): string {\n        return this._imageFile;\n    }\n\n    /** Indicates if this bitmap font is loaded. */\n    public get isLoaded(): boolean {\n        return this._assetLoaded;\n    }\n\n    /** Loads this font. */\n    public load(): void {\n        let asset = AssetManager.getAsset(this._fontFileName);\n        if (asset !== undefined) {\n            this.processFontFile(asset.data);\n        } else {\n            Message.subscribe(MESSAGE_ASSET_LOADER_ASSET_LOADED + this._fontFileName, this);\n        }\n    }\n\n    /**\n     * The message handler.\n     */\n    public onMessage(message: Message): void {\n        if (message.code === MESSAGE_ASSET_LOADER_ASSET_LOADED + this._fontFileName) {\n            this.processFontFile((message.context as TextAsset).data);\n        }\n    }\n\n    /**\n     * Gets a glyph for the provided character.\n     * @param char The character to retrieve a glyph for.\n     */\n    public getGlyph(char: string): FontGlyph {\n\n        // Replace unrecognized characters with a '?'.\n        let code = char.charCodeAt(0);\n        code = (this._glyphs[code] === undefined) ? 63 : code;\n        return this._glyphs[code];\n    }\n\n    /**\n     * Measures the provided text in the x and y dimensions.\n     * @param text The text to be measured.\n     */\n    public measureText(text: string): Vector2 {\n        let size: Vector2 = Vector2.zero;\n\n        let maxX = 0;\n        let x = 0;\n        let y = 0;\n\n        for (let c of text) {\n            switch (c) {\n                case \"\\n\":\n                    if (x > maxX) {\n                        maxX = x;\n                    }\n                    x = 0;\n                    y += this._size;\n                    break;\n                default:\n                    x += this.getGlyph(c).xAdvance;\n                    break;\n            }\n        }\n\n        size.set(maxX, y);\n        return size;\n    }\n\n    private processFontFile(content: string): void {\n        let charCount: number = 0;\n        let lines: string[] = content.split(\"\\n\");\n        for (let line of lines) {\n\n            // Sanitize the line.\n            let data = line.replace(/\\s\\s+/g, ' ');\n            let fields = data.split(\" \");\n\n            // Look at the type of line\n            switch (fields[0]) {\n                case \"info\":\n                    this._size = Number(FontUtilities.extractFieldValue(fields[2]));\n                    break;\n                case \"common\":\n                    this._imageWidth = Number(FontUtilities.extractFieldValue(fields[3]));\n                    this._imageHeight = Number(FontUtilities.extractFieldValue(fields[4]));\n                    break;\n                case \"page\":\n                    {\n                        let id: number = Number(FontUtilities.extractFieldValue(fields[1]));\n\n                        this._imageFile = FontUtilities.extractFieldValue(fields[2]);\n\n                        // Strip quotes.\n                        this._imageFile = this._imageFile.replace(/\"/g, \"\");\n\n                        // Prepend the path to the image name. TODO: This should be configurable.\n                        this._imageFile = (\"assets/fonts/\" + this._imageFile).trim();\n                    }\n                    break;\n                case \"chars\":\n                    charCount = Number(FontUtilities.extractFieldValue(fields[1]));\n\n                    // Increment the expected count, the file's count is off by one.\n                    charCount++;\n                    break;\n                case \"char\":\n                    {\n                        let glyph = FontGlyph.fromFields(fields);\n                        this._glyphs[glyph.id] = glyph;\n                    }\n                    break;\n            }\n        }\n\n        // Verify the loaded glyphs\n        let actualGlyphCount = 0;\n\n        // Only count properties\n        let keys = Object.keys(this._glyphs);\n        for (let key of keys) {\n            if (this._glyphs.hasOwnProperty(key)) {\n                actualGlyphCount++;\n            }\n        }\n\n        if (actualGlyphCount !== charCount) {\n            throw new Error(`Font file reported existence of ${charCount} glyphs, but only ${actualGlyphCount} were found.`);\n        }\n\n        this._assetLoaded = true;\n    }\n}\n","﻿import { BitmapFont } from \"./BitmapFont\";\nimport { Message } from \"../message/message\";\nimport { MESSAGE_ASSET_LOADER_ASSET_LOADED, AssetManager } from \"../assets/assetManager\";\nimport { JsonAsset } from \"../assets/jsonAssetLoader\";\n\n/** Represents the configuration for a bitmap font. These are typically created and stored in a fonts file. */\nclass BitmapFontConfig {\n\n    /** The name of this font. */\n    public name: string;\n\n    /** The font file path of this bitmap font. */\n    public fontFile: string;\n\n    /**\n     * Creates a BitmapFontConfig from the provided JSON.\n     * @param json The JSON to create from.\n     */\n    public static fromJson(json: any): BitmapFontConfig {\n        let config = new BitmapFontConfig();\n        if (json.name !== undefined) {\n            config.name = String(json.name);\n        }\n\n        if (json.fontFile !== undefined) {\n            config.fontFile = String(json.fontFile);\n        } else {\n            throw new Error(\"Cannot create a bitmap font without a font file.\");\n        }\n\n        return config;\n    }\n}\n\n/** A manager for bitmap fonts. */\nexport class BitmapFontManager {\n\n    private static _configLoaded: boolean = false;\n    private static _fonts: { [name: string]: BitmapFont } = {};\n\n    /** Hide the constructor to prevent instantiation. */\n    private constructor() {\n    }\n\n    /**\n     * The message handler.\n     * @param message The message to be handled.\n     */\n    // public static onMessage(message: Message): void {\n\n    //     // TODO: one for each asset.\n    //     if (message.code === MESSAGE_ASSET_LOADER_ASSET_LOADED + \"assets/fonts/fonts.json\") {\n    //         // Message.unsubscribeCallback(MESSAGE_ASSET_LOADER_ASSET_LOADED + \"assets/fonts/fonts.json\",\n    //         //     BitmapFontManager.onMessage);\n\n    //         BitmapFontManager.processFontAsset(message.context as JsonAsset);\n    //     }\n    // }\n\n    public static addFont(name: string, fontFile: string) {\n        BitmapFontManager._fonts[name] = new BitmapFont(name, fontFile);\n    }\n\n    /** Indicates if this manager is loaded. */\n    public static get isLoaded(): boolean {\n        if (BitmapFontManager._configLoaded) {\n\n            // If the config is loaded, check that all fonts are loaded.\n            let keys = Object.keys(BitmapFontManager._fonts);\n            for (let key of keys) {\n                if (!BitmapFontManager._fonts[key].isLoaded) {\n                    console.debug(\"Font \" + key + \" is still loading...\");\n                    return false;\n                }\n            }\n\n            console.debug(\"All fonts are loaded\");\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Gets a font by the given name.\n     * @param name The name of the font.\n     */\n    public static getFont(name: string): BitmapFont {\n        if (BitmapFontManager._fonts[name] === undefined) {\n            throw new Error(\"A font named \" + name + \" does not exist.\");\n        }\n\n        return BitmapFontManager._fonts[name];\n    }\n\n    /**\n     * Loads registered fonts.\n     */\n    // public static load(): void {\n\n    //     // Get the asset(s). TODO: This probably should come from a central asset manifest.\n    //     let asset = AssetManager.getAsset(\"assets/fonts/fonts.json\");\n    //     if (asset !== undefined) {\n    //         BitmapFontManager.processFontAsset(asset as JsonAsset);\n    //     } else {\n\n    //         // Listen for the asset load.\n    //         // Message.subscribeCallback(MESSAGE_ASSET_LOADER_ASSET_LOADED + \"assets/fonts/fonts.json\",\n    //         //     BitmapFontManager.onMessage);\n    //     }\n    // }\n\n    public static load() {\n        const keys = Object.keys(BitmapFontManager._fonts);\n        for (let key of keys) {\n            BitmapFontManager._fonts[key].load();\n        }\n    }\n\n    public static updateReady(): boolean {\n        const keys = Object.keys(BitmapFontManager._fonts);\n        for (let key of keys) {\n            if (!BitmapFontManager._fonts[key].isLoaded) {\n                console.debug(`Font ${key} is still loading...`);\n                return false;\n            }\n        }\n\n        console.debug(`All fonts are loaded...`);\n        return true;\n    }\n\n    private static processFontAsset(asset: JsonAsset): void {\n\n        let fonts = asset.data.bitmapFonts;\n        if (fonts) {\n            for (let font of fonts) {\n                let f = BitmapFontConfig.fromJson(font);\n                BitmapFontManager._fonts[font.name] = new BitmapFont(font.name, font.fontFile);\n\n                // Start it loading, since all fonts should always be available.\n                BitmapFontManager._fonts[font.name].load();\n            }\n        }\n\n        // TODO: Should only set this if ALL queued assets have loaded.\n        BitmapFontManager._configLoaded = true;\n    }\n}\n","﻿import { Vector3 } from \"../math/vector3\";\nimport { GLBuffer, AttributeInfo } from \"../gl/glBuffer\";\nimport { Material } from \"./material\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { Vertex } from \"./vertex\";\nimport { BitmapFontManager } from \"./BitmapFontManager\";\nimport { Matrix4x4 } from \"../math/matrix4x4\";\nimport { Color } from \"./color\";\nimport { Shader } from \"../gl/shader\";\nimport { gl } from \"../gl/gl\";\n\n/**\n * A bitmap text graphics object which is responsible for the underlying rendering\n * of text to the screen.\n */\nexport class BitmapText {\n\n    private _fontName: string;\n    private _isDirty: boolean = false;\n\n    protected _name: string;\n    protected _origin: Vector3 = Vector3.zero;\n\n    protected _buffer: GLBuffer;\n    protected _material: Material;\n    protected _bitmapFont: BitmapFont;\n    protected _vertices: Vertex[] = [];\n    protected _text: string;\n\n    /**\n     * Creates a new bitmap text graphics object.\n     * @param name The name of the text object.\n     * @param fontName The name of the font to be used.\n     */\n    public constructor(name: string, fontName: string) {\n        this._name = name;\n        this._fontName = fontName;\n    }\n\n    /**\n     * The name of this object.\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /** Gets the text value of this object. */\n    public get text(): string {\n        return this._text;\n    }\n\n    /** Sets the text value of this object. */\n    public set text(value: string) {\n        if (this._text !== value) {\n            this._text = value;\n            this._isDirty = true;\n        }\n    }\n\n    /** Gets the origin for this object. */\n    public get origin(): Vector3 {\n        return this._origin;\n    }\n\n    /** Sets the origin for this object. */\n    public set origin(value: Vector3) {\n        this._origin = value;\n        this.calculateVertices();\n    }\n\n    /** Destroys this object. */\n    public destroy(): void {\n        this._buffer.destroy();\n        this._material.destroy();\n        this._material = undefined;\n    }\n\n    /** Loads this bitmap text object. */\n    public load(): void {\n        this._bitmapFont = BitmapFontManager.getFont(this._fontName);\n\n        // TODO: probably need a simpler shader for UI elements such as this.\n        // let shader = ShaderManager.GetShader(BuiltinShader.BASIC);\n        // if (shader === undefined) {\n        //     throw new Error(\"Unable to basic builtin shader.\");\n        // }\n\n        this._material = new Material(`BITMAP_FONT_${this.name}_${this._bitmapFont.size}`, /*shader,*/ this._bitmapFont.textureName, Color.white());\n\n        this._buffer = new GLBuffer();\n\n        let positionAttribute = new AttributeInfo();\n        positionAttribute.location = 0;\n        positionAttribute.size = 3;\n        this._buffer.addAttributeLocation(positionAttribute);\n\n        let texCoordAttribute = new AttributeInfo();\n        texCoordAttribute.location = 1;\n        texCoordAttribute.size = 2;\n        this._buffer.addAttributeLocation(texCoordAttribute);\n    }\n\n    /**\n     * Updates this object.\n     * @param time The amount of time in milliseconds since the last update.\n     */\n    public update(time: number): void {\n        if (this._isDirty && this._bitmapFont.isLoaded) {\n            this.calculateVertices();\n            this._isDirty = false;\n        }\n    }\n\n    public draw(shader: Shader, model: Matrix4x4) {\n        const modelLocation = shader.getUniformLocation(\"u_model\");\n        gl.uniformMatrix4fv(modelLocation, false, model.toFloat32Array());\n\n        const colorLocation = shader.getUniformLocation(\"u_tint\");\n        gl.uniform4fv(colorLocation, this._material.tint.toFloat32Array());\n\n        if (this._material.diffuseTexture != undefined) {\n            this._material.diffuseTexture.activateAndBind(0);\n            const diffuseLocation = shader.getUniformLocation(\"u_diffuse\");\n            gl.uniform1i(diffuseLocation, 0);\n        }\n\n        this._buffer.bind();\n        this._buffer.draw();\n    }\n\n    private calculateVertices(): void {\n        this._vertices.length = 0;\n        this._buffer.clearData();\n\n        let x = 0;\n        let y = 0;\n\n        for (let c of this._text) {\n            if (c === \"\\n\") {\n                x = 0;\n                y += this._bitmapFont.size;\n                continue;\n            }\n\n            let g = this._bitmapFont.getGlyph(c);\n\n            let minX = x + g.xOffset;\n            let minY = y + g.yOffset;\n\n            let maxX = minX + g.width;\n            let maxY = minY + g.height;\n\n\n            let minu = g.x / this._bitmapFont.imageWidth;\n            let minv = g.y / this._bitmapFont.imageHeight;\n\n            let maxu = (g.x + g.width) / this._bitmapFont.imageWidth;\n            let maxv = (g.y + g.height) / this._bitmapFont.imageHeight;\n\n            this._vertices.push(new Vertex(minX, minY, 0, minu, minv));\n            this._vertices.push(new Vertex(minX, maxY, 0, minu, maxv));\n            this._vertices.push(new Vertex(maxX, maxY, 0, maxu, maxv));\n            this._vertices.push(new Vertex(maxX, maxY, 0, maxu, maxv));\n            this._vertices.push(new Vertex(maxX, minY, 0, maxu, minv));\n            this._vertices.push(new Vertex(minX, minY, 0, minu, minv));\n\n            x += g.xAdvance;\n        }\n\n        for (let v of this._vertices) {\n            this._buffer.pushBackData(v.toArray());\n        }\n\n        this._buffer.upload();\n        this._buffer.unbind();\n    }\n}\n","﻿import { IComponentData } from \"./IComponentData\";\nimport { Vector3 } from \"../math/vector3\";\nimport { IComponentBuilder } from \"./IComponentBuilder\";\nimport { IComponent } from \"./IComponent\";\nimport { IMessageHandler } from \"../message/IMessageHandler\";\nimport { BaseComponent } from \"./baseComponent\";\nimport { BitmapText } from \"../graphics/BitmapText\";\nimport { Message } from \"../message/message\";\nimport { Shader } from \"../gl/shader\";\n\nexport class BitmapTextComponentData implements IComponentData {\n    public name: string;\n    public fontName: string;\n    public origin: Vector3 = Vector3.zero;\n    public text: string;\n\n    public setFromJson(json: any): void {\n        if (json.name !== undefined) {\n            this.name = String(json.name);\n        }\n\n        if (json.fontName !== undefined) {\n            this.fontName = String(json.fontName);\n        }\n\n        if (json.text !== undefined) {\n            this.text = String(json.text);\n        }\n\n        if (json.origin !== undefined) {\n            this.origin.setFromJson(json.origin);\n        }\n    }\n}\n\nexport class BitmapTextComponentBuilder implements IComponentBuilder {\n    public get type(): string {\n        return \"bitmapText\";\n    }\n\n    public buildFromJson(json: any): IComponent {\n        let data = new BitmapTextComponentData();\n        data.setFromJson(json);\n        return new BitmapTextComponent(data);\n    }\n}\n\n/**\n * A component which renders bitmap text.\n */\nexport class BitmapTextComponent extends BaseComponent implements IMessageHandler {\n\n    private _bitmapText: BitmapText;\n    private _fontName: string;\n\n    /**\n     * Creates a new BitmapTextComponent.\n     * @param data The data to use for creation.\n     */\n    public constructor(data: BitmapTextComponentData) {\n        super(data);\n        this._fontName = data.fontName;\n        this._bitmapText = new BitmapText(this.name, this._fontName);\n        if (!data.origin.equals(Vector3.zero)) {\n            this._bitmapText.origin.copyFrom(data.origin);\n        }\n\n        this._bitmapText.text = data.text;\n\n        // Listen for text updates.\n        Message.subscribe(this.name + \":SetText\", this);\n    }\n\n    /** Loads this component. */\n    public load(): void {\n        this._bitmapText.load();\n    }\n\n    /**\n     * Updates this component.\n     * @param time The amount of time in milliseconds since the last update.\n     */\n    public update(time: number): void {\n        this._bitmapText.update(time);\n    }\n\n    /**\n     * Renders this component.\n     * @param shader The shader to use for rendering.\n     */\n    public render(shader: Shader): void {\n        this._bitmapText.draw(shader, this._owner.worldMatrix);\n        super.render(shader);\n    }\n\n    /**\n     * The message handler.\n     * @param message The message to be handled.\n     */\n    public onMessage(message: Message): void {\n        if (message.code === this.name + \":SetText\") {\n            this._bitmapText.text = String(message.context);\n        }\n    }\n}\n","﻿import { IBehaviorData } from \"./IBehaviorData\";\nimport { IBehaviorBuilder } from \"./IBehaviorBuilder\";\nimport { IBehavior } from \"./IBehavior\";\nimport { BaseBehavior } from \"./baseBehavior\";\nimport { IMessageHandler } from \"../message/IMessageHandler\";\nimport { Message } from \"../message/message\";\nimport { MouseContext } from \"../input/inputManager\";\n\n/**\n * The data for a mouse click behavior.\n */\nexport class MouseClickBehaviorData implements IBehaviorData {\n\n    /** The name of this behavior. */\n    public name: string;\n\n    /** The width of the area to be registered as a click, relative to the TEntity to which this is attached. */\n    public width: number;\n\n    /** The height of the area to be registered as a click, relative to the TEntity to which this is attached. */\n    public height: number;\n\n    /** The message code to be sent when a click is detected. */\n    public messageCode: string;\n\n    /**\n     * Sets this data from the provided json.\n     * @param json The json to set from.\n     */\n    public setFromJson(json: any): void {\n        if (json.name === undefined) {\n            throw new Error(\"Name must be defined in behavior data.\");\n        }\n\n        this.name = String(json.name);\n\n        if (json.width === undefined) {\n            throw new Error(\"width must be defined in behavior data.\");\n        } else {\n            this.width = Number(json.width);\n        }\n\n        if (json.height === undefined) {\n            throw new Error(\"height must be defined in behavior data.\");\n        } else {\n            this.height = Number(json.height);\n        }\n\n        if (json.messageCode === undefined) {\n            throw new Error(\"messageCode must be defined in behavior data.\");\n        } else {\n            this.messageCode = String(json.messageCode);\n        }\n    }\n}\n\n/**\n * The builder for a MouseClick behavior.\n */\nexport class MouseClickBehaviorBuilder implements IBehaviorBuilder {\n    public get type(): string {\n        return \"mouseClick\";\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        let data = new MouseClickBehaviorData();\n        data.setFromJson(json);\n        return new MouseClickBehavior(data);\n    }\n}\n\n/**\n * A behavior which detects clicks within a given width and height, relative to the\n * position of the object to which it is attached. When clicked, a message with the\n * configured message code is sent.\n */\nexport class MouseClickBehavior extends BaseBehavior implements IMessageHandler {\n\n    private _width: number;\n    private _height: number;\n    private _messageCode: string;\n\n    /**\n     * Creates a new MouseClickBehavior.\n     * @param data The data for this behavior.\n     */\n    public constructor(data: MouseClickBehaviorData) {\n        super(data);\n\n        this._width = data.width;\n        this._height = data.height;\n        this._messageCode = data.messageCode;\n        Message.subscribe(\"MOUSE_UP\", this);\n    }\n\n    /**\n     * The message handler.\n     * @param message The message to be handled.\n     */\n    public onMessage(message: Message): void {\n        if (message.code === \"MOUSE_UP\") {\n            if (!this._owner.isVisible) {\n                return;\n            }\n            let context = message.context as MouseContext;\n            let worldPos = this._owner.getWorldPosition();\n            let extentsX = worldPos.x + this._width;\n            let extentsY = worldPos.y + this._height;\n            if (context.position.x >= worldPos.x && context.position.x <= extentsX &&\n                context.position.y >= worldPos.y && context.position.y <= extentsY) {\n                // Send the c onfigured message. \n                Message.send(this._messageCode, this);\n            }\n        }\n    }\n}\n","﻿import { IBehaviorData } from \"./IBehaviorData\";\nimport { IBehaviorBuilder } from \"./IBehaviorBuilder\";\nimport { IBehavior } from \"./IBehavior\";\nimport { BaseBehavior } from \"./baseBehavior\";\nimport { IMessageHandler } from \"../message/IMessageHandler\";\nimport { Message } from \"../message/message\";\n\nexport class VisibilityOnMessageBehaviorData implements IBehaviorData {\n    public name: string;\n    public messageCode: string;\n    public visible: boolean;\n\n    public setFromJson(json: any): void {\n        if (json.messageCode === undefined) {\n            throw new Error(\"VisibilityOnMessageBehaviorData requires 'messageCode' to be defined.\");\n        } else {\n            this.messageCode = String(json.messageCode);\n        }\n\n        if (json.visible === undefined) {\n            throw new Error(\"VisibilityOnMessageBehaviorData requires 'visible' to be defined.\");\n        } else {\n            this.visible = Boolean(json.visible);\n        }\n    }\n}\n\nexport class VisibilityOnMessageBehaviorBuilder implements IBehaviorBuilder {\n\n    public get type(): string {\n        return \"visibilityOnMessage\";\n    }\n\n    public buildFromJson(json: any): IBehavior {\n        let data = new VisibilityOnMessageBehaviorData();\n        data.setFromJson(json);\n        return new VisibilityOnMessageBehavior(data);\n    }\n}\n\n/**\n * A behavior which enables or disables visibility when the configured message is recieved.\n */\nexport class VisibilityOnMessageBehavior extends BaseBehavior implements IMessageHandler {\n\n    private _messageCode: string;\n    private _visible: boolean;\n\n    /**\n     * Creates a new VisibilityOnMessageBehavior.\n     * @param data The data for this behavior.\n     */\n    public constructor(data: VisibilityOnMessageBehaviorData) {\n        super(data);\n\n        this._messageCode = data.messageCode;\n        this._visible = data.visible;\n\n        Message.subscribe(this._messageCode, this);\n    }\n\n    /**\n     * The message handler.\n     * @param message The message to be handled.\n     */\n    public onMessage(message: Message): void {\n        if (message.code === this._messageCode) {\n            this._owner.isVisible = this._visible;\n        }\n    }\n}\n","import { mat4 } from 'gl-matrix';\n\nimport { GLUtilities, gl } from './gl/gl';\nimport { BasicShader } from './gl/shaders/basicShader';\nimport { SpriteComponentBuilder } from './components/spriteComponent';\nimport { AnimatedSpriteComponentBuilder } from './components/animatedSpriteComponent';\nimport { AssetManager } from './assets/assetManager';\nimport { MessageBus } from './message/messageBus';\nimport { MaterialManager } from './graphics/materialManager';\nimport { Material } from './graphics/material';\nimport { Color } from './graphics/color';\nimport { ZoneManager } from './world/zoneManager';\nimport { ComponentManager } from './components/componentManager';\nimport { BehaviorManager } from './behaviors/behaviorManager';\nimport { RotationBehaviorBuilder } from './behaviors/rotationBehavior';\nimport { KeyboardMovementBehaviorBuilder } from './behaviors/keyboardMovementBehavior';\nimport { InputManager, MouseContext } from './input/inputManager';\nimport { IMessageHandler } from './message/IMessageHandler';\nimport { Message } from './message/message';\nimport { AudioManager } from './audio/audioManager';\nimport { CollisionComponentBuilder } from './components/collisionComponent';\nimport { CollisionManager } from './collision/CollisionManager';\nimport { PlayerBehaviorBuilder } from './behaviors/PlayerBehavior';\nimport { ScrollBehaviorBuilder } from './behaviors/ScrollBehavior';\nimport { BitmapFontManager } from './graphics/BitmapFontManager';\nimport { BitmapTextComponentBuilder } from './components/BitmapTextComponent';\nimport { MouseClickBehaviorBuilder } from './behaviors/MouseClickBehavior';\nimport { VisibilityOnMessageBehaviorBuilder } from './behaviors/VisibilityOnMessageBehavior';\nimport { Matrix4x4 } from './math/matrix4x4';\nimport { Vector2 } from './math/vector2';\n\nexport class XGLEngine implements IMessageHandler {\n    private _canvas: HTMLCanvasElement;\n    private _basicShader: BasicShader;\n    private _projection: Matrix4x4;\n    private _previousTime: number = 0;\n    private _gameWidth: number;\n    private _gameHeight: number;\n\n    private _isFirstUpdate: boolean = true;\n    private _aspect: number;\n\n    public constructor(width?: number, height?: number) {\n        if (width) this._gameWidth = width;\n        if (height) this._gameHeight = height;\n    }\n\n    public start(elementName?: string): void {\n\n        this._canvas = GLUtilities.init(elementName);\n\n        if (this._gameWidth !== undefined && this._gameHeight !== undefined) {\n            this._aspect = this._gameWidth / this._gameHeight;\n        }\n\n        ComponentManager.registerBuilder(new SpriteComponentBuilder());\n        ComponentManager.registerBuilder(new AnimatedSpriteComponentBuilder());\n        ComponentManager.registerBuilder(new CollisionComponentBuilder());\n        ComponentManager.registerBuilder(new BitmapTextComponentBuilder());\n\n        BehaviorManager.registerBuilder(new RotationBehaviorBuilder());\n        BehaviorManager.registerBuilder(new KeyboardMovementBehaviorBuilder());\n        BehaviorManager.registerBuilder(new PlayerBehaviorBuilder());\n        BehaviorManager.registerBuilder(new ScrollBehaviorBuilder());\n        BehaviorManager.registerBuilder(new MouseClickBehaviorBuilder());\n        BehaviorManager.registerBuilder(new VisibilityOnMessageBehaviorBuilder());\n\n        AssetManager.initialize();\n        InputManager.initialize(this._canvas);\n        ZoneManager.initialize();\n\n        this._basicShader = new BasicShader();\n        this._basicShader.use();\n\n        BitmapFontManager.addFont(\"default\", \"assets/fonts/text.txt\");\n        BitmapFontManager.load();\n\n        // TODO: This should not be here. This is part of the game\n        MaterialManager.registerMaterial(new Material('bg', 'assets/textures/bg.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('end', 'assets/textures/end.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('middle', 'assets/textures/middle.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('grass', 'assets/textures/grass.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('duck', 'assets/textures/duck.png', new Color(255, 255, 255, 255)));\n\n        MaterialManager.registerMaterial(new Material('playbtn', 'assets/textures/playbtn.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('restartbtn', 'assets/textures/restartbtn.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('score', 'assets/textures/score.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('title', 'assets/textures/title.png', new Color(255, 255, 255, 255)));\n        MaterialManager.registerMaterial(new Material('tutorial', 'assets/textures/tutorial.png', new Color(255, 255, 255, 255)));\n\n        AudioManager.loadSoundFile('flap', 'assets/sounds/flap.mp3', false);\n        AudioManager.loadSoundFile('ting', 'assets/sounds/ting.mp3', false);\n        AudioManager.loadSoundFile('dead', 'assets/sounds/dead.mp3', false);\n\n        this._projection = Matrix4x4.orthographic(0, this._canvas.width, this._canvas.height, 0, -100.0, 100.0);\n\n        this.resize();\n\n        // Begin preloading phase waiting for all assets to be loaded before starting the game\n        this.preloading();\n    }\n\n    /**\n     * Resizes to fit the window.\n     */\n    public resize(): void {\n        if (this._canvas !== undefined) {\n            if (this._gameWidth === undefined || this._gameHeight === undefined) {\n                this._canvas.width = window.innerWidth;\n                this._canvas.height = window.innerHeight;\n                gl.viewport(0, 0, window.innerWidth, window.innerHeight);\n                this._projection = Matrix4x4.orthographic(0, window.innerWidth, window.innerHeight, 0, -100.0, 100.0);\n            } else {\n                let newWidth = window.innerWidth;\n                let newHeight = window.innerHeight;\n                let newWidthToHeight = newWidth / newHeight;\n                const gameArea = document.getElementById(\"gameArea\");\n\n                if (newWidthToHeight > this._aspect) {\n                    newWidth = newHeight * this._aspect;\n                } else {\n                    newHeight = newWidth * this._aspect;\n                }\n\n                gameArea.style.width = newWidth + 'px';\n                gameArea.style.height = newHeight + 'px';\n                gameArea.style.marginTop = (-newHeight / 2) + 'px';\n                gameArea.style.marginLeft = (-newWidth / 2) + 'px';\n\n                this._canvas.width = newWidth;\n                this._canvas.height = newHeight;\n                gl.viewport(0, 0, newWidth, newHeight);\n                this._projection = Matrix4x4.orthographic(0, this._gameWidth, this._gameHeight, 0, -100.0, 100.0);\n\n                const resolutionScale = new Vector2(newWidth / this._gameWidth, newHeight / this._gameHeight);\n                InputManager.setResolutionScale(resolutionScale);\n            }\n        }\n    }\n\n    public onMessage(message: Message): void {\n        if (message.code === 'MOUSE_UP') {\n            const context = message.context as MouseContext;\n            document.title = `Pos: [${context.position.x}], [${context.position.y}]`;\n        }\n    }\n\n    private loop(): void {\n        if (this._isFirstUpdate) {\n\n        }\n\n        this.update();\n        this.render();\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    private preloading() {\n        // Make sure we always update message bus\n        MessageBus.update(0);\n\n        if (!BitmapFontManager.updateReady()) {\n            requestAnimationFrame(this.preloading.bind(this));\n            return;\n        }\n\n        // Load up Zone. Make this configurable\n        ZoneManager.changeZone(0);\n\n        this.loop();\n    }\n\n    private update(): void {\n        const delta = performance.now() - this._previousTime;\n\n        MessageBus.update(delta);\n        ZoneManager.update(delta);\n        CollisionManager.update(delta);\n\n        this._previousTime = performance.now();\n    }\n\n    private render(): void {\n        GLUtilities.clearFrame();\n\n        ZoneManager.render(this._basicShader);\n\n        const projectionPosition = this._basicShader.getUniformLocation('u_projection');\n        gl.uniformMatrix4fv(projectionPosition, false, this._projection.toFloat32Array());\n    }\n\n    private createProjection(): mat4 {\n        let m: mat4 = mat4.create();\n\n        return mat4.ortho(m, 0, this._canvas.width, this._canvas.height, 0, -100.0, 100.0);\n    }\n}\n\n","\nimport { XGLEngine } from 'xgl';\n\nnamespace Island {\n\n    let xgl: XGLEngine;\n\n    window.onload = () => {\n\n        xgl = new XGLEngine(320, 480);\n        xgl.start(\"viewport\");\n    }\n\n    window.onresize = () => {\n        xgl && xgl.resize();\n    }\n\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}